{"version":3,"file":"slate-react.js","sources":["../src/constants/event-handlers.js","../src/constants/plugin-props.js","../src/utils/offset-key.js","../src/components/leaf.js","../src/components/text.js","../src/components/void.js","../src/utils/get-children-decorations.js","../src/components/node.js","../src/utils/find-dom-node.js","../src/utils/find-dom-point.js","../src/utils/find-dom-range.js","../src/utils/find-point.js","../src/utils/find-range.js","../src/utils/scroll-to-selection.js","../src/components/content.js","../src/utils/clone-fragment.js","../src/utils/find-node.js","../src/utils/get-event-range.js","../src/constants/transfer-types.js","../src/utils/get-event-transfer.js","../src/utils/set-event-transfer.js","../src/plugins/after.js","../src/plugins/before.js","../src/utils/noop.js","../src/components/editor.js","../src/index.js"],"sourcesContent":["/**\n * Event handlers used by Slate plugins.\n *\n * @type {Array}\n */\n\nconst EVENT_HANDLERS = [\n  'onBeforeInput',\n  'onBlur',\n  'onClick',\n  'onCompositionEnd',\n  'onCompositionStart',\n  'onCopy',\n  'onCut',\n  'onDragEnd',\n  'onDragEnter',\n  'onDragExit',\n  'onDragLeave',\n  'onDragOver',\n  'onDragStart',\n  'onDrop',\n  'onInput',\n  'onFocus',\n  'onKeyDown',\n  'onKeyUp',\n  'onPaste',\n  'onSelect',\n]\n\n/**\n * Export.\n *\n * @type {Array}\n */\n\nexport default EVENT_HANDLERS\n","import EVENT_HANDLERS from './event-handlers'\n\n/**\n * Props that can be defined by plugins.\n *\n * @type {Array}\n */\n\nconst PLUGIN_PROPS = [\n  ...EVENT_HANDLERS,\n  'decorateNode',\n  'onChange',\n  'renderMark',\n  'renderNode',\n  'renderPlaceholder',\n  'renderPortal',\n  'schema',\n  'validateNode',\n]\n\n/**\n * Export.\n *\n * @type {Array}\n */\n\nexport default PLUGIN_PROPS\n","/**\n * Offset key parser regex.\n *\n * @type {RegExp}\n */\n\nconst PARSER = /^([\\w-]+)(?::(\\d+))?$/\n\n/**\n * Parse an offset key `string`.\n *\n * @param {String} string\n * @return {Object}\n */\n\nfunction parse(string) {\n  const matches = PARSER.exec(string)\n\n  if (!matches) {\n    throw new Error(`Invalid offset key string \"${string}\".`)\n  }\n\n  const [original, key, index] = matches // eslint-disable-line no-unused-vars\n  return {\n    key,\n    index: parseInt(index, 10),\n  }\n}\n\n/**\n * Stringify an offset key `object`.\n *\n * @param {Object} object\n *   @property {String} key\n *   @property {Number} index\n * @return {String}\n */\n\nfunction stringify(object) {\n  return `${object.key}:${object.index}`\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport default {\n  parse,\n  stringify,\n}\n","import Debug from 'debug'\nimport React from 'react'\nimport Types from 'prop-types'\nimport SlateTypes from 'slate-prop-types'\n\nimport OffsetKey from '../utils/offset-key'\n\n/**\n * Debugger.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:leaves')\n\n/**\n * Leaf.\n *\n * @type {Component}\n */\n\nclass Leaf extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    block: SlateTypes.block.isRequired,\n    editor: Types.object.isRequired,\n    index: Types.number.isRequired,\n    leaves: SlateTypes.leaves.isRequired,\n    marks: SlateTypes.marks.isRequired,\n    node: SlateTypes.node.isRequired,\n    offset: Types.number.isRequired,\n    parent: SlateTypes.node.isRequired,\n    text: Types.string.isRequired,\n  }\n\n  /**\n   * Debug.\n   *\n   * @param {String} message\n   * @param {Mixed} ...args\n   */\n\n  debug = (message, ...args) => {\n    debug(message, `${this.props.node.key}-${this.props.index}`, ...args)\n  }\n\n  /**\n   * Should component update?\n   *\n   * @param {Object} props\n   * @return {Boolean}\n   */\n\n  shouldComponentUpdate(props) {\n    // If any of the regular properties have changed, re-render.\n    if (\n      props.index != this.props.index ||\n      props.marks != this.props.marks ||\n      props.text != this.props.text ||\n      props.parent != this.props.parent\n    ) {\n      return true\n    }\n\n    // Otherwise, don't update.\n    return false\n  }\n\n  /**\n   * Render the leaf.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    this.debug('render', this)\n\n    const { node, index } = this.props\n    const offsetKey = OffsetKey.stringify({\n      key: node.key,\n      index,\n    })\n\n    return <span data-offset-key={offsetKey}>{this.renderMarks()}</span>\n  }\n\n  /**\n   * Render all of the leaf's mark components.\n   *\n   * @return {Element}\n   */\n\n  renderMarks() {\n    const { marks, node, offset, text, editor } = this.props\n    const { stack } = editor\n    const leaf = this.renderText()\n    const attributes = {\n      'data-slate-leaf': true,\n    }\n\n    return marks.reduce((children, mark) => {\n      const props = {\n        editor,\n        mark,\n        marks,\n        node,\n        offset,\n        text,\n        children,\n        attributes,\n      }\n      const element = stack.find('renderMark', props)\n      return element || children\n    }, leaf)\n  }\n\n  /**\n   * Render the text content of the leaf, accounting for browsers.\n   *\n   * @return {Element}\n   */\n\n  renderText() {\n    const { block, node, parent, text, index, leaves } = this.props\n\n    // COMPAT: Render text inside void nodes with a zero-width space.\n    // So the node can contain selection but the text is not visible.\n    if (parent.isVoid) {\n      return <span data-slate-zero-width=\"z\">{'\\u200B'}</span>\n    }\n\n    // COMPAT: If this is the last text node in an empty block, render a zero-\n    // width space that will convert into a line break when copying and pasting\n    // to support expected plain text.\n    if (\n      text === '' &&\n      parent.object === 'block' &&\n      parent.text === '' &&\n      parent.nodes.size === 1\n    ) {\n      return <span data-slate-zero-width=\"n\">{'\\u200B'}</span>\n    }\n\n    // COMPAT: If the text is empty, it's because it's on the edge of an inline\n    // void node, so we render a zero-width space so that the selection can be\n    // inserted next to it still.\n    if (text === '') {\n      return <span data-slate-zero-width=\"z\">{'\\u200B'}</span>\n    }\n\n    // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n    // so we need to add an extra trailing new lines to prevent that.\n    const lastText = block.getLastText()\n    const lastChar = text.charAt(text.length - 1)\n    const isLastText = node === lastText\n    const isLastLeaf = index === leaves.size - 1\n    if (isLastText && isLastLeaf && lastChar === '\\n') return `${text}\\n`\n\n    // Otherwise, just return the text.\n    return text\n  }\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Leaf\n","import Debug from 'debug'\nimport ImmutableTypes from 'react-immutable-proptypes'\nimport React from 'react'\nimport SlateTypes from 'slate-prop-types'\nimport Types from 'prop-types'\n\nimport Leaf from './leaf'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:node')\n\n/**\n * Text.\n *\n * @type {Component}\n */\n\nclass Text extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    block: SlateTypes.block,\n    decorations: ImmutableTypes.list.isRequired,\n    editor: Types.object.isRequired,\n    node: SlateTypes.node.isRequired,\n    parent: SlateTypes.node.isRequired,\n    style: Types.object,\n  }\n\n  /**\n   * Default prop types.\n   *\n   * @type {Object}\n   */\n\n  static defaultProps = {\n    style: null,\n  }\n\n  /**\n   * Debug.\n   *\n   * @param {String} message\n   * @param {Mixed} ...args\n   */\n\n  debug = (message, ...args) => {\n    const { node } = this.props\n    const { key } = node\n    debug(message, `${key} (text)`, ...args)\n  }\n\n  /**\n   * Should the node update?\n   *\n   * @param {Object} nextProps\n   * @param {Object} value\n   * @return {Boolean}\n   */\n\n  shouldComponentUpdate = nextProps => {\n    const { props } = this\n    const n = nextProps\n    const p = props\n\n    // If the node has changed, update. PERF: There are cases where it will have\n    // changed, but it's properties will be exactly the same (eg. copy-paste)\n    // which this won't catch. But that's rare and not a drag on performance, so\n    // for simplicity we just let them through.\n    if (n.node != p.node) return true\n\n    // If the node parent is a block node, and it was the last child of the\n    // block, re-render to cleanup extra `\\n`.\n    if (n.parent.object == 'block') {\n      const pLast = p.parent.nodes.last()\n      const nLast = n.parent.nodes.last()\n      if (p.node == pLast && n.node != nLast) return true\n    }\n\n    // Re-render if the current decorations have changed.\n    if (!n.decorations.equals(p.decorations)) return true\n\n    // Otherwise, don't update.\n    return false\n  }\n\n  /**\n   * Render.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    this.debug('render', this)\n\n    const { decorations, editor, node, style } = this.props\n    const { value } = editor\n    const { document } = value\n    const { key } = node\n\n    const decs = decorations.filter(d => {\n      const { startKey, endKey } = d\n      if (startKey == key || endKey == key) return true\n      if (startKey === endKey) return false\n      const startsBefore = document.areDescendantsSorted(startKey, key)\n      if (!startsBefore) return false\n      const endsAfter = document.areDescendantsSorted(key, endKey)\n      return endsAfter\n    })\n\n    // PERF: Take advantage of cache by avoiding arguments\n    const leaves = decs.size === 0 ? node.getLeaves() : node.getLeaves(decs)\n    let offset = 0\n\n    const children = leaves.map((leaf, i) => {\n      const child = this.renderLeaf(leaves, leaf, i, offset)\n      offset += leaf.text.length\n      return child\n    })\n\n    return (\n      <span data-key={key} style={style}>\n        {children}\n      </span>\n    )\n  }\n\n  /**\n   * Render a single leaf given a `leaf` and `offset`.\n   *\n   * @param {List<Leaf>} leaves\n   * @param {Leaf} leaf\n   * @param {Number} index\n   * @param {Number} offset\n   * @return {Element} leaf\n   */\n\n  renderLeaf = (leaves, leaf, index, offset) => {\n    const { block, node, parent, editor } = this.props\n    const { text, marks } = leaf\n\n    return (\n      <Leaf\n        key={`${node.key}-${index}`}\n        block={block}\n        editor={editor}\n        index={index}\n        marks={marks}\n        node={node}\n        offset={offset}\n        parent={parent}\n        leaves={leaves}\n        text={text}\n      />\n    )\n  }\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Text\n","import Debug from 'debug'\nimport React from 'react'\nimport SlateTypes from 'slate-prop-types'\nimport Types from 'prop-types'\n\nimport Text from './text'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:void')\n\n/**\n * Void.\n *\n * @type {Component}\n */\n\nclass Void extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    block: SlateTypes.block,\n    children: Types.any.isRequired,\n    editor: Types.object.isRequired,\n    node: SlateTypes.node.isRequired,\n    parent: SlateTypes.node.isRequired,\n    readOnly: Types.bool.isRequired,\n  }\n\n  /**\n   * Debug.\n   *\n   * @param {String} message\n   * @param {Mixed} ...args\n   */\n\n  debug = (message, ...args) => {\n    const { node } = this.props\n    const { key, type } = node\n    const id = `${key} (${type})`\n    debug(message, `${id}`, ...args)\n  }\n\n  /**\n   * Render.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    const { props } = this\n    const { children, node, readOnly } = props\n    const Tag = node.object == 'block' ? 'div' : 'span'\n    const style = {\n      height: '0',\n      color: 'transparent',\n      outline: 'none',\n    }\n\n    const spacer = (\n      <Tag data-slate-spacer style={style}>\n        {this.renderText()}\n      </Tag>\n    )\n\n    const content = (\n      <Tag contentEditable={readOnly ? null : false}>{children}</Tag>\n    )\n\n    this.debug('render', { props })\n\n    return (\n      <Tag data-slate-void data-key={node.key}>\n        {readOnly ? null : spacer}\n        {content}\n      </Tag>\n    )\n  }\n\n  /**\n   * Render the void node's text node, which will catch the cursor when it the\n   * void node is navigated to with the arrow keys.\n   *\n   * Having this text node there means the browser continues to manage the\n   * selection natively, so it keeps track of the right offset when moving\n   * across the block.\n   *\n   * @return {Element}\n   */\n\n  renderText = () => {\n    const {\n      block,\n      decorations,\n      isSelected,\n      node,\n      readOnly,\n      editor,\n    } = this.props\n    const child = node.getFirstText()\n    return (\n      <Text\n        block={node.object == 'block' ? node : block}\n        decorations={decorations}\n        editor={editor}\n        isSelected={isSelected}\n        key={child.key}\n        node={child}\n        parent={node}\n        readOnly={readOnly}\n      />\n    )\n  }\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Void\n","import { Set } from 'immutable'\n\n/**\n * Split the decorations in lists of relevant decorations for each child.\n *\n * @param {Node} node\n * @param {List} decorations\n * @return {Array<List<Decoration>>}\n */\n\nfunction getChildrenDecorations(node, decorations) {\n  const activeDecorations = Set().asMutable()\n  const childrenDecorations = []\n\n  orderChildDecorations(node, decorations).forEach(item => {\n    if (item.isRangeStart) {\n      // Item is a decoration start\n      activeDecorations.add(item.decoration)\n    } else if (item.isRangeEnd) {\n      // item is a decoration end\n      activeDecorations.remove(item.decoration)\n    } else {\n      // Item is a child node\n      childrenDecorations.push(activeDecorations.toList())\n    }\n  })\n\n  return childrenDecorations\n}\n\n/**\n * Orders the children of provided node and its decoration endpoints (start, end)\n * so that decorations can be passed only to relevant children (see use in Node.render())\n *\n * @param {Node} node\n * @param {List} decorations\n * @return {Array<Item>}\n *\n * where type Item =\n * {\n *   child: Node,\n *   // Index of the child in its parent\n *   index: number\n * }\n * or {\n *   // True if this represents the start of the given decoration\n *   isRangeStart: boolean,\n *   // True if this represents the end of the given decoration\n *   isRangeEnd: boolean,\n *   decoration: Range\n * }\n */\n\nfunction orderChildDecorations(node, decorations) {\n  if (decorations.isEmpty()) {\n    return node.nodes.toArray().map((child, index) => ({\n      child,\n      index,\n    }))\n  }\n\n  // Map each key to its global order\n  const keyOrders = { [node.key]: 0 }\n  let globalOrder = 1\n  node.forEachDescendant(child => {\n    keyOrders[child.key] = globalOrder\n    globalOrder = globalOrder + 1\n  })\n\n  const childNodes = node.nodes.toArray()\n\n  const endPoints = childNodes.map((child, index) => ({\n    child,\n    index,\n    order: keyOrders[child.key],\n  }))\n\n  decorations.forEach(decoration => {\n    // Range start.\n    // A rangeStart should be before the child containing its startKey, in order\n    // to consider it active before going down the child.\n    const startKeyOrder = keyOrders[decoration.startKey]\n    const containingChildOrder =\n      startKeyOrder === undefined\n        ? 0\n        : getContainingChildOrder(childNodes, keyOrders, startKeyOrder)\n    endPoints.push({\n      isRangeStart: true,\n      order: containingChildOrder - 0.5,\n      decoration,\n    })\n\n    // Range end.\n    const endKeyOrder = (keyOrders[decoration.endKey] || globalOrder) + 0.5\n    endPoints.push({\n      isRangeEnd: true,\n      order: endKeyOrder,\n      decoration,\n    })\n  })\n\n  return endPoints.sort((a, b) => (a.order > b.order ? 1 : -1))\n}\n\n/*\n * Returns the key order of the child right before the given order.\n */\n\nfunction getContainingChildOrder(children, keyOrders, order) {\n  // Find the first child that is after the given key\n  const nextChildIndex = children.findIndex(\n    child => order < keyOrders[child.key]\n  )\n\n  if (nextChildIndex <= 0) {\n    return 0\n  }\n\n  const containingChild = children[nextChildIndex - 1]\n  return keyOrders[containingChild.key]\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default getChildrenDecorations\n","import Debug from 'debug'\nimport ImmutableTypes from 'react-immutable-proptypes'\nimport React from 'react'\nimport SlateTypes from 'slate-prop-types'\nimport logger from 'slate-dev-logger'\nimport Types from 'prop-types'\n\nimport Void from './void'\nimport Text from './text'\nimport getChildrenDecorations from '../utils/get-children-decorations'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:node')\n\n/**\n * Node.\n *\n * @type {Component}\n */\n\nclass Node extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    block: SlateTypes.block,\n    decorations: ImmutableTypes.list.isRequired,\n    editor: Types.object.isRequired,\n    isSelected: Types.bool.isRequired,\n    node: SlateTypes.node.isRequired,\n    parent: SlateTypes.node.isRequired,\n    readOnly: Types.bool.isRequired,\n  }\n\n  /**\n   * Debug.\n   *\n   * @param {String} message\n   * @param {Mixed} ...args\n   */\n\n  debug = (message, ...args) => {\n    const { node } = this.props\n    const { key, type } = node\n    debug(message, `${key} (${type})`, ...args)\n  }\n\n  /**\n   * Should the node update?\n   *\n   * @param {Object} nextProps\n   * @param {Object} value\n   * @return {Boolean}\n   */\n\n  shouldComponentUpdate = nextProps => {\n    const { props } = this\n    const { stack } = props.editor\n    const shouldUpdate = stack.find(\n      'shouldNodeComponentUpdate',\n      props,\n      nextProps\n    )\n    const n = nextProps\n    const p = props\n\n    // If the `Component` has a custom logic to determine whether the component\n    // needs to be updated or not, return true if it returns true. If it returns\n    // false, we need to ignore it, because it shouldn't be allowed it.\n    if (shouldUpdate != null) {\n      if (shouldUpdate) {\n        return true\n      }\n\n      if (shouldUpdate === false) {\n        logger.warn(\n          \"Returning false in `shouldNodeComponentUpdate` does not disable Slate's internal `shouldComponentUpdate` logic. If you want to prevent updates, use React's `shouldComponentUpdate` instead.\"\n        )\n      }\n    }\n\n    // If the `readOnly` status has changed, re-render in case there is any\n    // user-land logic that depends on it, like nested editable contents.\n    if (n.readOnly != p.readOnly) return true\n\n    // If the node has changed, update. PERF: There are cases where it will have\n    // changed, but it's properties will be exactly the same (eg. copy-paste)\n    // which this won't catch. But that's rare and not a drag on performance, so\n    // for simplicity we just let them through.\n    if (n.node != p.node) return true\n\n    // If the selection value of the node or of some of its children has changed,\n    // re-render in case there is any user-land logic depends on it to render.\n    // if the node is selected update it, even if it was already selected: the\n    // selection value of some of its children could have been changed and they\n    // need to be rendered again.\n    if (n.isSelected || p.isSelected) return true\n\n    // If the decorations have changed, update.\n    if (!n.decorations.equals(p.decorations)) return true\n\n    // Otherwise, don't update.\n    return false\n  }\n\n  /**\n   * Render.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    this.debug('render', this)\n    const {\n      editor,\n      isSelected,\n      node,\n      decorations,\n      parent,\n      readOnly,\n    } = this.props\n    const { value } = editor\n    const { selection } = value\n    const { stack } = editor\n    const indexes = node.getSelectionIndexes(selection, isSelected)\n    const decs = decorations.concat(node.getDecorations(stack))\n    const childrenDecorations = getChildrenDecorations(node, decs)\n\n    let children = []\n    node.nodes.forEach((child, i) => {\n      const isChildSelected = !!indexes && indexes.start <= i && i < indexes.end\n\n      children.push(\n        this.renderNode(child, isChildSelected, childrenDecorations[i])\n      )\n    })\n\n    // Attributes that the developer must mix into the element in their\n    // custom node renderer component.\n    const attributes = { 'data-key': node.key }\n\n    // If it's a block node with inline children, add the proper `dir` attribute\n    // for text direction.\n    if (node.object == 'block' && node.nodes.first().object != 'block') {\n      const direction = node.getTextDirection()\n      if (direction == 'rtl') attributes.dir = 'rtl'\n    }\n\n    const props = {\n      key: node.key,\n      editor,\n      isSelected,\n      node,\n      parent,\n      readOnly,\n    }\n\n    let placeholder = stack.find('renderPlaceholder', props)\n\n    if (placeholder) {\n      placeholder = React.cloneElement(placeholder, {\n        key: `${node.key}-placeholder`,\n      })\n      children = [placeholder, ...children]\n    }\n\n    const element = stack.find('renderNode', {\n      ...props,\n      attributes,\n      children,\n    })\n\n    return node.isVoid ? <Void {...this.props}>{element}</Void> : element\n  }\n\n  /**\n   * Render a `child` node.\n   *\n   * @param {Node} child\n   * @param {Boolean} isSelected\n   * @param {Array<Decoration>} decorations\n   * @return {Element}\n   */\n\n  renderNode = (child, isSelected, decorations) => {\n    const { block, editor, node, readOnly } = this.props\n    const Component = child.object == 'text' ? Text : Node\n\n    return (\n      <Component\n        block={node.object == 'block' ? node : block}\n        decorations={decorations}\n        editor={editor}\n        isSelected={isSelected}\n        key={child.key}\n        node={child}\n        parent={node}\n        readOnly={readOnly}\n      />\n    )\n  }\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Node\n","import { Node } from 'slate'\n\n/**\n * Find the DOM node for a `key`.\n *\n * @param {String|Node} key\n * @param {Window} win (optional)\n * @return {Element}\n */\n\nfunction findDOMNode(key, win = window) {\n  if (Node.isNode(key)) {\n    key = key.key\n  }\n\n  const el = win.document.querySelector(`[data-key=\"${key}\"]`)\n\n  if (!el) {\n    throw new Error(\n      `Unable to find a DOM node for \"${key}\". This is often because of forgetting to add \\`props.attributes\\` to a custom component.`\n    )\n  }\n\n  return el\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findDOMNode\n","import findDOMNode from './find-dom-node'\n\n/**\n * Find a native DOM selection point from a Slate `key` and `offset`.\n *\n * @param {String} key\n * @param {Number} offset\n * @param {Window} win (optional)\n * @return {Object|Null}\n */\n\nfunction findDOMPoint(key, offset, win = window) {\n  const el = findDOMNode(key, win)\n  let start = 0\n  let n\n\n  // COMPAT: In IE, this method's arguments are not optional, so we have to\n  // pass in all four even though the last two are defaults. (2017/10/25)\n  const iterator = win.document.createNodeIterator(\n    el,\n    NodeFilter.SHOW_TEXT,\n    () => NodeFilter.FILTER_ACCEPT,\n    false\n  )\n\n  while ((n = iterator.nextNode())) {\n    const { length } = n.textContent\n    const end = start + length\n\n    if (offset <= end) {\n      const o = offset - start\n      return { node: n, offset: o >= 0 ? o : 0 }\n    }\n\n    start = end\n  }\n\n  return null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findDOMPoint\n","import findDOMPoint from './find-dom-point'\n\n/**\n * Find a native DOM range Slate `range`.\n *\n * @param {Range} range\n * @param {Window} win (optional)\n * @return {Object|Null}\n */\n\nfunction findDOMRange(range, win = window) {\n  const {\n    anchorKey,\n    anchorOffset,\n    focusKey,\n    focusOffset,\n    isBackward,\n    isCollapsed,\n  } = range\n  const anchor = findDOMPoint(anchorKey, anchorOffset, win)\n  const focus = isCollapsed ? anchor : findDOMPoint(focusKey, focusOffset, win)\n  if (!anchor || !focus) return null\n\n  const r = win.document.createRange()\n  const start = isBackward ? focus : anchor\n  const end = isBackward ? anchor : focus\n  r.setStart(start.node, start.offset)\n  r.setEnd(end.node, end.offset)\n  return r\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findDOMRange\n","import getWindow from 'get-window'\n\nimport OffsetKey from './offset-key'\n\n/**\n * Constants.\n *\n * @type {String}\n */\n\nexport const ZERO_WIDTH_ATTRIBUTE = 'data-slate-zero-width'\nexport const ZERO_WIDTH_SELECTOR = `[${ZERO_WIDTH_ATTRIBUTE}]`\nconst OFFSET_KEY_ATTRIBUTE = 'data-offset-key'\nconst RANGE_SELECTOR = `[${OFFSET_KEY_ATTRIBUTE}]`\nconst TEXT_SELECTOR = `[data-key]`\nconst VOID_SELECTOR = '[data-slate-void]'\n\n/**\n * Find a Slate point from a DOM selection's `nativeNode` and `nativeOffset`.\n *\n * @param {Element} nativeNode\n * @param {Number} nativeOffset\n * @param {Value} value\n * @return {Object}\n */\n\nfunction findPoint(nativeNode, nativeOffset, value) {\n  const { node: nearestNode, offset: nearestOffset } = normalizeNodeAndOffset(\n    nativeNode,\n    nativeOffset\n  )\n\n  const window = getWindow(nativeNode)\n  const { parentNode } = nearestNode\n  let rangeNode = parentNode.closest(RANGE_SELECTOR)\n  let offset\n  let node\n\n  // Calculate how far into the text node the `nearestNode` is, so that we can\n  // determine what the offset relative to the text node is.\n  if (rangeNode) {\n    const range = window.document.createRange()\n    const textNode = rangeNode.closest(TEXT_SELECTOR)\n    range.setStart(textNode, 0)\n    range.setEnd(nearestNode, nearestOffset)\n    node = textNode\n    offset = range.toString().length\n  } else {\n    // For void nodes, the element with the offset key will be a cousin, not an\n    // ancestor, so find it by going down from the nearest void parent.\n    const voidNode = parentNode.closest(VOID_SELECTOR)\n    if (!voidNode) return null\n    rangeNode = voidNode.querySelector(RANGE_SELECTOR)\n    if (!rangeNode) return null\n    node = rangeNode\n    offset = node.textContent.length\n  }\n\n  // COMPAT: If the parent node is a Slate zero-width space, this is because the\n  // text node should have no characters. However, during IME composition the\n  // ASCII characters will be prepended to the zero-width space, so subtract 1\n  // from the offset to account for the zero-width space character.\n  if (\n    offset == node.textContent.length &&\n    parentNode.hasAttribute(ZERO_WIDTH_ATTRIBUTE)\n  ) {\n    offset--\n  }\n\n  // Get the string value of the offset key attribute.\n  const offsetKey = rangeNode.getAttribute(OFFSET_KEY_ATTRIBUTE)\n  if (!offsetKey) return null\n\n  const { key } = OffsetKey.parse(offsetKey)\n\n  // COMPAT: If someone is clicking from one Slate editor into another, the\n  // select event fires twice, once for the old editor's `element` first, and\n  // then afterwards for the correct `element`. (2017/03/03)\n  if (!value.document.hasDescendant(key)) return null\n\n  return {\n    key,\n    offset,\n  }\n}\n\n/**\n * From a DOM selection's `node` and `offset`, normalize so that it always\n * refers to a text node.\n *\n * @param {Element} node\n * @param {Number} offset\n * @return {Object}\n */\n\nfunction normalizeNodeAndOffset(node, offset) {\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (node.nodeType == 1 && node.childNodes.length) {\n    const isLast = offset == node.childNodes.length\n    const direction = isLast ? 'backward' : 'forward'\n    const index = isLast ? offset - 1 : offset\n    node = getEditableChild(node, index, direction)\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (node.nodeType == 1 && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, direction)\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return { node, offset }\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n *\n * @param {Element} parent\n * @param {Number} index\n * @param {String} direction ('forward' or 'backward')\n * @return {Element|Null}\n */\n\nfunction getEditableChild(parent, index, direction) {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    child.nodeType == 8 ||\n    (child.nodeType == 1 && child.childNodes.length == 0) ||\n    (child.nodeType == 1 && child.getAttribute('contenteditable') == 'false')\n  ) {\n    if (triedForward && triedBackward) break\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    if (direction == 'forward') i++\n    if (direction == 'backward') i--\n  }\n\n  return child || null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findPoint\n","import getWindow from 'get-window'\nimport isBackward from 'selection-is-backward'\nimport { Range } from 'slate'\nimport { IS_IE, IS_EDGE } from 'slate-dev-environment'\n\nimport findPoint from './find-point'\nimport findDOMPoint from './find-dom-point'\n\n/**\n * Find a Slate range from a DOM `native` selection.\n *\n * @param {Selection} native\n * @param {Value} value\n * @return {Range}\n */\n\nfunction findRange(native, value) {\n  const el = native.anchorNode || native.startContainer\n  if (!el) return null\n\n  const window = getWindow(el)\n\n  // If the `native` object is a DOM `Range` or `StaticRange` object, change it\n  // into something that looks like a DOM `Selection` instead.\n  if (\n    native instanceof window.Range ||\n    (window.StaticRange && native instanceof window.StaticRange)\n  ) {\n    native = {\n      anchorNode: native.startContainer,\n      anchorOffset: native.startOffset,\n      focusNode: native.endContainer,\n      focusOffset: native.endOffset,\n    }\n  }\n\n  const {\n    anchorNode,\n    anchorOffset,\n    focusNode,\n    focusOffset,\n    isCollapsed,\n  } = native\n  const anchor = findPoint(anchorNode, anchorOffset, value)\n  const focus = isCollapsed ? anchor : findPoint(focusNode, focusOffset, value)\n  if (!anchor || !focus) return null\n\n  // COMPAT: ??? The Edge browser seems to have a case where if you select the\n  // last word of a span, it sets the endContainer to the containing span.\n  // `selection-is-backward` doesn't handle this case.\n  if (IS_IE || IS_EDGE) {\n    const domAnchor = findDOMPoint(anchor.key, anchor.offset)\n    const domFocus = findDOMPoint(focus.key, focus.offset)\n\n    native = {\n      anchorNode: domAnchor.node,\n      anchorOffset: domAnchor.offset,\n      focusNode: domFocus.node,\n      focusOffset: domFocus.offset,\n    }\n  }\n\n  const range = Range.create({\n    anchorKey: anchor.key,\n    anchorOffset: anchor.offset,\n    focusKey: focus.key,\n    focusOffset: focus.offset,\n    isBackward: isCollapsed ? false : isBackward(native),\n    isFocused: true,\n  })\n\n  return range\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findRange\n","import getWindow from 'get-window'\nimport isBackward from 'selection-is-backward'\nimport { IS_SAFARI, IS_IOS } from 'slate-dev-environment'\n\n/**\n * CSS overflow values that would cause scrolling.\n *\n * @type {Array}\n */\n\nconst OVERFLOWS = ['auto', 'overlay', 'scroll']\n\n/**\n * Detect whether we are running IOS version 11\n */\n\nconst IS_IOS_11 = IS_IOS && !!window.navigator.userAgent.match(/os 11_/i)\n\n/**\n * Find the nearest parent with scrolling, or window.\n *\n * @param {el} Element\n */\n\nfunction findScrollContainer(el, window) {\n  let parent = el.parentNode\n  let scroller\n\n  while (!scroller) {\n    if (!parent.parentNode) break\n\n    const style = window.getComputedStyle(parent)\n    const { overflowY } = style\n\n    if (OVERFLOWS.includes(overflowY)) {\n      scroller = parent\n      break\n    }\n\n    parent = parent.parentNode\n  }\n\n  // COMPAT: Because Chrome does not allow doucment.body.scrollTop, we're\n  // assuming that window.scrollTo() should be used if the scrollable element\n  // turns out to be document.body or document.documentElement. This will work\n  // unless body is intentionally set to scrollable by restricting its height\n  // (e.g. height: 100vh).\n  if (!scroller) {\n    return window.document.body\n  }\n\n  return scroller\n}\n\n/**\n * Scroll the current selection's focus point into view if needed.\n *\n * @param {Selection} selection\n */\n\nfunction scrollToSelection(selection) {\n  if (IS_IOS_11) return\n  if (!selection.anchorNode) return\n\n  const window = getWindow(selection.anchorNode)\n  const scroller = findScrollContainer(selection.anchorNode, window)\n  const isWindow =\n    scroller == window.document.body ||\n    scroller == window.document.documentElement\n  const backward = isBackward(selection)\n\n  const range = selection.getRangeAt(0).cloneRange()\n  range.collapse(backward)\n  let cursorRect = range.getBoundingClientRect()\n\n  // COMPAT: range.getBoundingClientRect() returns 0s in Safari when range is\n  // collapsed. Expanding the range by 1 is a relatively effective workaround\n  // for vertical scroll, although horizontal may be off by 1 character.\n  // https://bugs.webkit.org/show_bug.cgi?id=138949\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=435438\n  if (IS_SAFARI) {\n    if (range.collapsed && cursorRect.top == 0 && cursorRect.height == 0) {\n      if (range.startOffset == 0) {\n        range.setEnd(range.endContainer, 1)\n      } else {\n        range.setStart(range.startContainer, range.startOffset - 1)\n      }\n\n      cursorRect = range.getBoundingClientRect()\n\n      if (cursorRect.top == 0 && cursorRect.height == 0) {\n        if (range.getClientRects().length) {\n          cursorRect = range.getClientRects()[0]\n        }\n      }\n    }\n  }\n\n  let width\n  let height\n  let yOffset\n  let xOffset\n  let scrollerTop = 0\n  let scrollerLeft = 0\n  let scrollerBordersY = 0\n  let scrollerBordersX = 0\n  let scrollerPaddingTop = 0\n  let scrollerPaddingBottom = 0\n  let scrollerPaddingLeft = 0\n  let scrollerPaddingRight = 0\n\n  if (isWindow) {\n    const { innerWidth, innerHeight, pageYOffset, pageXOffset } = window\n    width = innerWidth\n    height = innerHeight\n    yOffset = pageYOffset\n    xOffset = pageXOffset\n  } else {\n    const { offsetWidth, offsetHeight, scrollTop, scrollLeft } = scroller\n    const {\n      borderTopWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      borderRightWidth,\n      paddingTop,\n      paddingBottom,\n      paddingLeft,\n      paddingRight,\n    } = window.getComputedStyle(scroller)\n\n    const scrollerRect = scroller.getBoundingClientRect()\n    width = offsetWidth\n    height = offsetHeight\n    scrollerTop = scrollerRect.top + parseInt(borderTopWidth, 10)\n    scrollerLeft = scrollerRect.left + parseInt(borderLeftWidth, 10)\n    scrollerBordersY =\n      parseInt(borderTopWidth, 10) + parseInt(borderBottomWidth, 10)\n    scrollerBordersX =\n      parseInt(borderLeftWidth, 10) + parseInt(borderRightWidth, 10)\n    scrollerPaddingTop = parseInt(paddingTop, 10)\n    scrollerPaddingBottom = parseInt(paddingBottom, 10)\n    scrollerPaddingLeft = parseInt(paddingLeft, 10)\n    scrollerPaddingRight = parseInt(paddingRight, 10)\n    yOffset = scrollTop\n    xOffset = scrollLeft\n  }\n\n  const cursorTop = cursorRect.top + yOffset - scrollerTop\n  const cursorLeft = cursorRect.left + xOffset - scrollerLeft\n\n  let x = xOffset\n  let y = yOffset\n\n  if (cursorLeft < xOffset) {\n    // selection to the left of viewport\n    x = cursorLeft - scrollerPaddingLeft\n  } else if (\n    cursorLeft + cursorRect.width + scrollerBordersX >\n    xOffset + width\n  ) {\n    // selection to the right of viewport\n    x = cursorLeft + scrollerBordersX + scrollerPaddingRight - width\n  }\n\n  if (cursorTop < yOffset) {\n    // selection above viewport\n    y = cursorTop - scrollerPaddingTop\n  } else if (\n    cursorTop + cursorRect.height + scrollerBordersY >\n    yOffset + height\n  ) {\n    // selection below viewport\n    y =\n      cursorTop +\n      scrollerBordersY +\n      scrollerPaddingBottom +\n      cursorRect.height -\n      height\n  }\n\n  if (isWindow) {\n    window.scrollTo(x, y)\n  } else {\n    scroller.scrollTop = y\n    scroller.scrollLeft = x\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default scrollToSelection\n","import Debug from 'debug'\nimport React from 'react'\nimport Types from 'prop-types'\nimport getWindow from 'get-window'\nimport {\n  IS_FIREFOX,\n  IS_IOS,\n  IS_ANDROID,\n  SUPPORTED_EVENTS,\n} from 'slate-dev-environment'\nimport logger from 'slate-dev-logger'\nimport throttle from 'lodash/throttle'\n\nimport EVENT_HANDLERS from '../constants/event-handlers'\nimport Node from './node'\nimport findDOMRange from '../utils/find-dom-range'\nimport findRange from '../utils/find-range'\nimport getChildrenDecorations from '../utils/get-children-decorations'\nimport scrollToSelection from '../utils/scroll-to-selection'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:content')\n\n/**\n * Content.\n *\n * @type {Component}\n */\n\nclass Content extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    autoCorrect: Types.bool.isRequired,\n    children: Types.any.isRequired,\n    className: Types.string,\n    editor: Types.object.isRequired,\n    readOnly: Types.bool.isRequired,\n    role: Types.string,\n    spellCheck: Types.bool.isRequired,\n    style: Types.object,\n    tabIndex: Types.number,\n    tagName: Types.string,\n  }\n\n  /**\n   * Default properties.\n   *\n   * @type {Object}\n   */\n\n  static defaultProps = {\n    style: {},\n    tagName: 'div',\n  }\n\n  /**\n   * Constructor.\n   *\n   * @param {Object} props\n   */\n\n  constructor(props) {\n    super(props)\n    this.tmp = {}\n    this.tmp.isUpdatingSelection = false\n\n    EVENT_HANDLERS.forEach(handler => {\n      this[handler] = event => {\n        this.onEvent(handler, event)\n      }\n    })\n  }\n\n  /**\n   * When the editor first mounts in the DOM we need to:\n   *\n   *   - Add native DOM event listeners.\n   *   - Update the selection, in case it starts focused.\n   */\n\n  componentDidMount = () => {\n    const window = getWindow(this.element)\n\n    window.document.addEventListener(\n      'selectionchange',\n      this.onNativeSelectionChange\n    )\n\n    // COMPAT: Restrict scope of `beforeinput` to mobile.\n    if ((IS_IOS || IS_ANDROID) && SUPPORTED_EVENTS.beforeinput) {\n      this.element.addEventListener('beforeinput', this.onNativeBeforeInput)\n    }\n\n    this.updateSelection()\n  }\n\n  /**\n   * When unmounting, remove DOM event listeners.\n   */\n\n  componentWillUnmount() {\n    const window = getWindow(this.element)\n\n    if (window) {\n      window.document.removeEventListener(\n        'selectionchange',\n        this.onNativeSelectionChange\n      )\n    }\n\n    // COMPAT: Restrict scope of `beforeinput` to mobile.\n    if ((IS_IOS || IS_ANDROID) && SUPPORTED_EVENTS.beforeinput) {\n      this.element.removeEventListener('beforeinput', this.onNativeBeforeInput)\n    }\n  }\n\n  /**\n   * On update, update the selection.\n   */\n\n  componentDidUpdate = () => {\n    this.updateSelection()\n  }\n\n  /**\n   * Update the native DOM selection to reflect the internal model.\n   */\n\n  updateSelection = () => {\n    const { editor } = this.props\n    const { value } = editor\n    const { selection } = value\n    const { isBackward } = selection\n    const window = getWindow(this.element)\n    const native = window.getSelection()\n    const { rangeCount, anchorNode } = native\n\n    // If both selections are blurred, do nothing.\n    if (!rangeCount && selection.isBlurred) return\n\n    // If the selection has been blurred, but is still inside the editor in the\n    // DOM, blur it manually.\n    if (selection.isBlurred) {\n      if (!this.isInEditor(anchorNode)) return\n      native.removeAllRanges()\n      this.element.blur()\n      debug('updateSelection', { selection, native })\n      return\n    }\n\n    // If the selection isn't set, do nothing.\n    if (selection.isUnset) return\n\n    // Otherwise, figure out which DOM nodes should be selected...\n    const current = !!rangeCount && native.getRangeAt(0)\n    const range = findDOMRange(selection, window)\n\n    if (!range) {\n      logger.error(\n        'Unable to find a native DOM range from the current selection.',\n        { selection }\n      )\n      return\n    }\n\n    const { startContainer, startOffset, endContainer, endOffset } = range\n\n    // If the new range matches the current selection, there is nothing to fix.\n    // COMPAT: The native `Range` object always has it's \"start\" first and \"end\"\n    // last in the DOM. It has no concept of \"backwards/forwards\", so we have\n    // to check both orientations here. (2017/10/31)\n    if (current) {\n      if (\n        (startContainer == current.startContainer &&\n          startOffset == current.startOffset &&\n          endContainer == current.endContainer &&\n          endOffset == current.endOffset) ||\n        (startContainer == current.endContainer &&\n          startOffset == current.endOffset &&\n          endContainer == current.startContainer &&\n          endOffset == current.startOffset)\n      ) {\n        return\n      }\n    }\n\n    // Otherwise, set the `isUpdatingSelection` flag and update the selection.\n    this.tmp.isUpdatingSelection = true\n    native.removeAllRanges()\n\n    // COMPAT: IE 11 does not support Selection.setBaseAndExtent\n    if (native.setBaseAndExtent) {\n      // COMPAT: Since the DOM range has no concept of backwards/forwards\n      // we need to check and do the right thing here.\n      if (isBackward) {\n        native.setBaseAndExtent(\n          range.endContainer,\n          range.endOffset,\n          range.startContainer,\n          range.startOffset\n        )\n      } else {\n        native.setBaseAndExtent(\n          range.startContainer,\n          range.startOffset,\n          range.endContainer,\n          range.endOffset\n        )\n      }\n    } else {\n      // COMPAT: IE 11 does not support Selection.extend, fallback to addRange\n      native.addRange(range)\n    }\n\n    // Scroll to the selection, in case it's out of view.\n    scrollToSelection(native)\n\n    // Then unset the `isUpdatingSelection` flag after a delay.\n    setTimeout(() => {\n      // COMPAT: In Firefox, it's not enough to create a range, you also need to\n      // focus the contenteditable element too. (2016/11/16)\n      if (IS_FIREFOX && this.element) this.element.focus()\n      this.tmp.isUpdatingSelection = false\n    })\n\n    debug('updateSelection', { selection, native })\n  }\n\n  /**\n   * The React ref method to set the root content element locally.\n   *\n   * @param {Element} element\n   */\n\n  ref = element => {\n    this.element = element\n  }\n\n  /**\n   * Check if an event `target` is fired from within the contenteditable\n   * element. This should be false for edits happening in non-contenteditable\n   * children, such as void nodes and other nested Slate editors.\n   *\n   * @param {Element} target\n   * @return {Boolean}\n   */\n\n  isInEditor = target => {\n    const { element } = this\n    // COMPAT: Text nodes don't have `isContentEditable` property. So, when\n    // `target` is a text node use its parent node for check.\n    const el = target.nodeType === 3 ? target.parentNode : target\n    return (\n      el.isContentEditable &&\n      (el === element || el.closest('[data-slate-editor]') === element)\n    )\n  }\n\n  /**\n   * On `event` with `handler`.\n   *\n   * @param {String} handler\n   * @param {Event} event\n   */\n\n  onEvent(handler, event) {\n    debug('onEvent', handler)\n\n    // Ignore `onBlur`, `onFocus` and `onSelect` events generated\n    // programmatically while updating selection.\n    if (\n      this.tmp.isUpdatingSelection &&\n      (handler == 'onSelect' || handler == 'onBlur' || handler == 'onFocus')\n    ) {\n      return\n    }\n\n    // COMPAT: There are situations where a select event will fire with a new\n    // native selection that resolves to the same internal position. In those\n    // cases we don't need to trigger any changes, since our internal model is\n    // already up to date, but we do want to update the native selection again\n    // to make sure it is in sync. (2017/10/16)\n    if (handler == 'onSelect') {\n      const { editor } = this.props\n      const { value } = editor\n      const { selection } = value\n      const window = getWindow(event.target)\n      const native = window.getSelection()\n      const range = findRange(native, value)\n\n      if (range && range.equals(selection)) {\n        this.updateSelection()\n        return\n      }\n    }\n\n    // Don't handle drag and drop events coming from embedded editors.\n    if (\n      handler == 'onDragEnd' ||\n      handler == 'onDragEnter' ||\n      handler == 'onDragExit' ||\n      handler == 'onDragLeave' ||\n      handler == 'onDragOver' ||\n      handler == 'onDragStart' ||\n      handler == 'onDrop'\n    ) {\n      const { target } = event\n      const targetEditorNode = target.closest('[data-slate-editor]')\n      if (targetEditorNode !== this.element) return\n    }\n\n    // Some events require being in editable in the editor, so if the event\n    // target isn't, ignore them.\n    if (\n      handler == 'onBeforeInput' ||\n      handler == 'onBlur' ||\n      handler == 'onCompositionEnd' ||\n      handler == 'onCompositionStart' ||\n      handler == 'onCopy' ||\n      handler == 'onCut' ||\n      handler == 'onFocus' ||\n      handler == 'onInput' ||\n      handler == 'onKeyDown' ||\n      handler == 'onKeyUp' ||\n      handler == 'onPaste' ||\n      handler == 'onSelect'\n    ) {\n      if (!this.isInEditor(event.target)) return\n    }\n\n    this.props[handler](event)\n  }\n\n  /**\n   * On a native `beforeinput` event, use the additional range information\n   * provided by the event to manipulate text exactly as the browser would.\n   *\n   * This is currently only used on iOS and Android.\n   *\n   * @param {InputEvent} event\n   */\n\n  onNativeBeforeInput = event => {\n    if (this.props.readOnly) return\n    if (!this.isInEditor(event.target)) return\n\n    const [targetRange] = event.getTargetRanges()\n    if (!targetRange) return\n\n    const { editor } = this.props\n\n    switch (event.inputType) {\n      case 'deleteContentBackward': {\n        event.preventDefault()\n\n        const range = findRange(targetRange, editor.value)\n        editor.change(change => change.deleteAtRange(range))\n        break\n      }\n\n      case 'insertLineBreak': // intentional fallthru\n      case 'insertParagraph': {\n        event.preventDefault()\n        const range = findRange(targetRange, editor.value)\n\n        editor.change(change => {\n          if (change.value.isInVoid) {\n            change.collapseToStartOfNextText()\n          } else {\n            change.splitBlockAtRange(range)\n          }\n        })\n        break\n      }\n\n      case 'insertReplacementText': // intentional fallthru\n      case 'insertText': {\n        // `data` should have the text for the `insertText` input type and\n        // `dataTransfer` should have the text for the `insertReplacementText`\n        // input type, but Safari uses `insertText` for spell check replacements\n        // and sets `data` to `null`.\n        const text =\n          event.data == null\n            ? event.dataTransfer.getData('text/plain')\n            : event.data\n\n        if (text == null) return\n\n        event.preventDefault()\n\n        const { value } = editor\n        const { selection } = value\n        const range = findRange(targetRange, value)\n\n        editor.change(change => {\n          change.insertTextAtRange(range, text, selection.marks)\n\n          // If the text was successfully inserted, and the selection had marks\n          // on it, unset the selection's marks.\n          if (selection.marks && value.document != change.value.document) {\n            change.select({ marks: null })\n          }\n        })\n\n        break\n      }\n    }\n  }\n\n  /**\n   * On native `selectionchange` event, trigger the `onSelect` handler. This is\n   * needed to account for React's `onSelect` being non-standard and not firing\n   * until after a selection has been released. This causes issues in situations\n   * where another change happens while a selection is being made.\n   *\n   * @param {Event} event\n   */\n\n  onNativeSelectionChange = throttle(event => {\n    if (this.props.readOnly) return\n\n    const window = getWindow(event.target)\n    const { activeElement } = window.document\n    if (activeElement !== this.element) return\n\n    this.props.onSelect(event)\n  }, 100)\n\n  /**\n   * Render the editor content.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    const { props } = this\n    const {\n      className,\n      readOnly,\n      editor,\n      tabIndex,\n      role,\n      tagName,\n      spellCheck,\n    } = props\n    const { value, stack } = editor\n    const Container = tagName\n    const { document, selection, decorations } = value\n    const indexes = document.getSelectionIndexes(selection, selection.isFocused)\n    const decs = document.getDecorations(stack).concat(decorations || [])\n    const childrenDecorations = getChildrenDecorations(document, decs)\n\n    const children = document.nodes.toArray().map((child, i) => {\n      const isSelected = !!indexes && indexes.start <= i && i < indexes.end\n\n      return this.renderNode(child, isSelected, childrenDecorations[i])\n    })\n\n    const handlers = EVENT_HANDLERS.reduce((obj, handler) => {\n      obj[handler] = this[handler]\n      return obj\n    }, {})\n\n    const style = {\n      // Prevent the default outline styles.\n      outline: 'none',\n      // Preserve adjacent whitespace and new lines.\n      whiteSpace: 'pre-wrap',\n      // Allow words to break if they are too long.\n      wordWrap: 'break-word',\n      // COMPAT: In iOS, a formatting menu with bold, italic and underline\n      // buttons is shown which causes our internal value to get out of sync in\n      // weird ways. This hides that. (2016/06/21)\n      ...(readOnly ? {} : { WebkitUserModify: 'read-write-plaintext-only' }),\n      // Allow for passed-in styles to override anything.\n      ...props.style,\n    }\n\n    debug('render', { props })\n\n    return (\n      <Container\n        {...handlers}\n        data-slate-editor\n        ref={this.ref}\n        data-key={document.key}\n        contentEditable={readOnly ? null : true}\n        suppressContentEditableWarning\n        className={className}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n        onCompositionEnd={this.onCompositionEnd}\n        onCompositionStart={this.onCompositionStart}\n        onCopy={this.onCopy}\n        onCut={this.onCut}\n        onDragEnd={this.onDragEnd}\n        onDragOver={this.onDragOver}\n        onDragStart={this.onDragStart}\n        onDrop={this.onDrop}\n        onInput={this.onInput}\n        onKeyDown={this.onKeyDown}\n        onKeyUp={this.onKeyUp}\n        onPaste={this.onPaste}\n        onSelect={this.onSelect}\n        autoCorrect={props.autoCorrect ? 'on' : 'off'}\n        spellCheck={spellCheck}\n        style={style}\n        role={readOnly ? null : role || 'textbox'}\n        tabIndex={tabIndex}\n        // COMPAT: The Grammarly Chrome extension works by changing the DOM out\n        // from under `contenteditable` elements, which leads to weird behaviors\n        // so we have to disable it like this. (2017/04/24)\n        data-gramm={false}\n      >\n        {children}\n        {this.props.children}\n      </Container>\n    )\n  }\n\n  /**\n   * Render a `child` node of the document.\n   *\n   * @param {Node} child\n   * @param {Boolean} isSelected\n   * @return {Element}\n   */\n\n  renderNode = (child, isSelected, decorations) => {\n    const { editor, readOnly } = this.props\n    const { value } = editor\n    const { document } = value\n\n    return (\n      <Node\n        block={null}\n        editor={editor}\n        decorations={decorations}\n        isSelected={isSelected}\n        key={child.key}\n        node={child}\n        parent={document}\n        readOnly={readOnly}\n      />\n    )\n  }\n}\n\n/**\n * Mix in handler prop types.\n */\n\nEVENT_HANDLERS.forEach(handler => {\n  Content.propTypes[handler] = Types.func.isRequired\n})\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Content\n","import Base64 from 'slate-base64-serializer'\nimport { IS_CHROME, IS_SAFARI, IS_OPERA } from 'slate-dev-environment'\n\nimport getWindow from 'get-window'\nimport findDOMNode from './find-dom-node'\nimport { ZERO_WIDTH_SELECTOR, ZERO_WIDTH_ATTRIBUTE } from './find-point'\n\n/**\n * Prepares a Slate document fragment to be copied to the clipboard.\n *\n * @param {Event} event\n * @param {Value} value\n * @param {Document} [fragment]\n */\n\nfunction cloneFragment(event, value, fragment = value.fragment) {\n  const window = getWindow(event.target)\n  const native = window.getSelection()\n  const { startKey, endKey, startText } = value\n  const startVoid = value.document.getClosestVoid(startKey)\n  const endVoid = value.document.getClosestVoid(endKey)\n\n  // If the selection is collapsed, and it isn't inside a void node, abort.\n  if (native.isCollapsed && !startVoid) return\n\n  // Create a fake selection so that we can add a Base64-encoded copy of the\n  // fragment to the HTML, to decode on future pastes.\n  const encoded = Base64.serializeNode(fragment)\n  const range = native.getRangeAt(0)\n  let contents = range.cloneContents()\n  let attach = contents.childNodes[0]\n\n  // Make sure attach is a non-empty node, since empty nodes will not get copied\n  contents.childNodes.forEach(node => {\n    if (node.innerText.trim() !== '') {\n      attach = node\n    }\n  })\n\n  // COMPAT: If the end node is a void node, we need to move the end of the\n  // range from the void node's spacer span, to the end of the void node's\n  // content, since the spacer is before void's content in the DOM.\n  if (endVoid) {\n    const r = range.cloneRange()\n    const node = findDOMNode(endVoid, window)\n    r.setEndAfter(node)\n    contents = r.cloneContents()\n  }\n\n  // COMPAT: If the start node is a void node, we need to attach the encoded\n  // fragment to the void node's content node instead of the spacer, because\n  // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n  // most browsers. (2018/04/27)\n  if (startVoid) {\n    attach = contents.childNodes[0].childNodes[1].firstChild\n  }\n\n  // COMPAT: in Safari and Chrome when selecting a single marked word, marks are\n  // not preserved when copying. If the attatched is not void, and the start key\n  // and endKey is the same, check if there is marks involved. If so, set the\n  // range start just before the start text node.\n  if ((IS_CHROME || IS_SAFARI || IS_OPERA) && !endVoid && startKey === endKey) {\n    const hasMarks =\n      startText.characters\n        .slice(value.selection.anchorOffset, value.selection.focusOffset)\n        .filter(char => char.marks.size !== 0).size !== 0\n    if (hasMarks) {\n      const r = range.cloneRange()\n      const node = findDOMNode(startText, window)\n      r.setStartBefore(node)\n      contents = r.cloneContents()\n      attach = contents.childNodes[contents.childNodes.length - 1].firstChild\n    }\n  }\n\n  // Remove any zero-width space spans from the cloned DOM so that they don't\n  // show up elsewhere when pasted.\n  ;[].slice.call(contents.querySelectorAll(ZERO_WIDTH_SELECTOR)).forEach(zw => {\n    const isNewline = zw.getAttribute(ZERO_WIDTH_ATTRIBUTE) === 'n'\n    zw.textContent = isNewline ? '\\n' : ''\n  })\n\n  // COMPAT: In Chrome and Safari, if the last element in the selection to\n  // copy has `contenteditable=\"false\"` the copy will fail, and nothing will\n  // be put in the clipboard. So we remove them all. (2017/05/04)\n  if (IS_CHROME || IS_SAFARI || IS_OPERA) {\n    const els = [].slice.call(\n      contents.querySelectorAll('[contenteditable=\"false\"]')\n    )\n    els.forEach(el => el.removeAttribute('contenteditable'))\n  }\n\n  // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n  // in the HTML, and can be used for intra-Slate pasting. If it's a text\n  // node, wrap it in a `<span>` so we have something to set an attribute on.\n  if (attach.nodeType == 3) {\n    const span = window.document.createElement('span')\n\n    // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n    // then leading and trailing spaces will be ignored. (2017/09/21)\n    span.style.whiteSpace = 'pre'\n\n    span.appendChild(attach)\n    contents.appendChild(span)\n    attach = span\n  }\n\n  attach.setAttribute('data-slate-fragment', encoded)\n\n  // Add the phony content to the DOM, and select it, so it will be copied.\n  const editor = event.target.closest('[data-slate-editor]')\n  const div = window.document.createElement('div')\n  div.setAttribute('contenteditable', true)\n  div.style.position = 'absolute'\n  div.style.left = '-9999px'\n\n  // COMPAT: In Firefox, the viewport jumps to find the phony div, so it\n  // should be created at the current scroll offset with `style.top`.\n  // The box model attributes which can interact with 'top' are also reset.\n  div.style.border = '0px'\n  div.style.padding = '0px'\n  div.style.margin = '0px'\n  div.style.top = `${window.pageYOffset ||\n    window.document.documentElement.scrollTop}px`\n\n  div.appendChild(contents)\n  editor.appendChild(div)\n\n  // COMPAT: In Firefox, trying to use the terser `native.selectAllChildren`\n  // throws an error, so we use the older `range` equivalent. (2016/06/21)\n  const r = window.document.createRange()\n  r.selectNodeContents(div)\n  native.removeAllRanges()\n  native.addRange(r)\n\n  // Revert to the previous selection right after copying.\n  window.requestAnimationFrame(() => {\n    editor.removeChild(div)\n    native.removeAllRanges()\n    native.addRange(range)\n  })\n}\n\nexport default cloneFragment\n","/**\n * Find a Slate node from a DOM `element`.\n *\n * @param {Element} element\n * @param {Value} value\n * @return {Node|Null}\n */\n\nfunction findNode(element, value) {\n  const closest = element.closest('[data-key]')\n  if (!closest) return null\n\n  const key = closest.getAttribute('data-key')\n  if (!key) return null\n\n  const node = value.document.getNode(key)\n  return node || null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findNode\n","import getWindow from 'get-window'\n\nimport { Range } from 'slate'\nimport findNode from './find-node'\nimport findRange from './find-range'\n\n/**\n * Get the target range from a DOM `event`.\n *\n * @param {Event} event\n * @param {Value} value\n * @return {Range}\n */\n\nfunction getEventRange(event, value) {\n  if (event.nativeEvent) {\n    event = event.nativeEvent\n  }\n\n  const { x, y, target } = event\n  if (x == null || y == null) return null\n\n  const { document } = value\n  const node = findNode(target, value)\n  if (!node) return null\n\n  // If the drop target is inside a void node, move it into either the next or\n  // previous node, depending on which side the `x` and `y` coordinates are\n  // closest to.\n  if (node.isVoid) {\n    const rect = target.getBoundingClientRect()\n    const isPrevious =\n      node.object == 'inline'\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n    const text = node.getFirstText()\n    const range = Range.create()\n    return isPrevious\n      ? range.moveToEndOf(document.getPreviousText(text.key))\n      : range.moveToStartOf(document.getNextText(text.key))\n  }\n\n  // Else resolve a range from the caret position where the drop occured.\n  const window = getWindow(target)\n  let native\n\n  // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n  if (window.document.caretRangeFromPoint) {\n    native = window.document.caretRangeFromPoint(x, y)\n  } else {\n    const position = window.document.caretPositionFromPoint(x, y)\n    native = window.document.createRange()\n    native.setStart(position.offsetNode, position.offset)\n    native.setEnd(position.offsetNode, position.offset)\n  }\n\n  // Resolve a Slate range from the DOM range.\n  const range = findRange(native, value)\n  if (!range) return null\n\n  return range\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default getEventRange\n","/**\n * The transfer types that Slate recognizes.\n *\n * @type {Object}\n */\n\nconst TRANSFER_TYPES = {\n  FRAGMENT: 'application/x-slate-fragment',\n  HTML: 'text/html',\n  NODE: 'application/x-slate-node',\n  RICH: 'text/rtf',\n  TEXT: 'text/plain',\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport default TRANSFER_TYPES\n","import Base64 from 'slate-base64-serializer'\n\nimport TRANSFER_TYPES from '../constants/transfer-types'\n\n/**\n * Transfer types.\n *\n * @type {String}\n */\n\nconst { FRAGMENT, HTML, NODE, RICH, TEXT } = TRANSFER_TYPES\n\n/**\n * Fragment matching regexp for HTML nodes.\n *\n * @type {RegExp}\n */\n\nconst FRAGMENT_MATCHER = / data-slate-fragment=\"([^\\s\"]+)\"/\n\n/**\n * Get the transfer data from an `event`.\n *\n * @param {Event} event\n * @return {Object}\n */\n\nfunction getEventTransfer(event) {\n  if (event.nativeEvent) {\n    event = event.nativeEvent\n  }\n\n  const transfer = event.dataTransfer || event.clipboardData\n  let fragment = getType(transfer, FRAGMENT)\n  let node = getType(transfer, NODE)\n  const html = getType(transfer, HTML)\n  const rich = getType(transfer, RICH)\n  let text = getType(transfer, TEXT)\n  let files\n\n  // If there isn't a fragment, but there is HTML, check to see if the HTML is\n  // actually an encoded fragment.\n  if (!fragment && html && ~html.indexOf(' data-slate-fragment=\"')) {\n    const matches = FRAGMENT_MATCHER.exec(html)\n    const [full, encoded] = matches // eslint-disable-line no-unused-vars\n    if (encoded) fragment = encoded\n  }\n\n  // COMPAT: Edge doesn't handle custom data types\n  // These will be embedded in text/plain in this case (2017/7/12)\n  if (text) {\n    const embeddedTypes = getEmbeddedTypes(text)\n\n    if (embeddedTypes[FRAGMENT]) fragment = embeddedTypes[FRAGMENT]\n    if (embeddedTypes[NODE]) node = embeddedTypes[NODE]\n    if (embeddedTypes[TEXT]) text = embeddedTypes[TEXT]\n  }\n\n  // Decode a fragment or node if they exist.\n  if (fragment) fragment = Base64.deserializeNode(fragment)\n  if (node) node = Base64.deserializeNode(node)\n\n  // COMPAT: Edge sometimes throws 'NotSupportedError'\n  // when accessing `transfer.items` (2017/7/12)\n  try {\n    // Get and normalize files if they exist.\n    if (transfer.items && transfer.items.length) {\n      files = Array.from(transfer.items)\n        .map(item => (item.kind == 'file' ? item.getAsFile() : null))\n        .filter(exists => exists)\n    } else if (transfer.files && transfer.files.length) {\n      files = Array.from(transfer.files)\n    }\n  } catch (err) {\n    if (transfer.files && transfer.files.length) {\n      files = Array.from(transfer.files)\n    }\n  }\n\n  // Determine the type of the data.\n  const data = { files, fragment, html, node, rich, text }\n  data.type = getTransferType(data)\n  return data\n}\n\n/**\n * Takes text input, checks whether contains embedded data\n * and returns object with original text +/- additional data\n *\n * @param {String} text\n * @return {Object}\n */\n\nfunction getEmbeddedTypes(text) {\n  const prefix = 'SLATE-DATA-EMBED::'\n\n  if (text.substring(0, prefix.length) != prefix) {\n    return { TEXT: text }\n  }\n\n  // Attempt to parse, if fails then just standard text/plain\n  // Otherwise, already had data embedded\n  try {\n    return JSON.parse(text.substring(prefix.length))\n  } catch (err) {\n    throw new Error('Unable to parse custom Slate drag event data.')\n  }\n}\n\n/**\n * Get the type of a transfer from its `data`.\n *\n * @param {Object} data\n * @return {String}\n */\n\nfunction getTransferType(data) {\n  if (data.fragment) return 'fragment'\n  if (data.node) return 'node'\n\n  // COMPAT: Microsoft Word adds an image of the selected text to the data.\n  // Since files are preferred over HTML or text, this would cause the type to\n  // be considered `files`. But it also adds rich text data so we can check\n  // for that and properly set the type to `html` or `text`. (2016/11/21)\n  if (data.rich && data.html) return 'html'\n  if (data.rich && data.text) return 'text'\n\n  if (data.files && data.files.length) return 'files'\n  if (data.html) return 'html'\n  if (data.text) return 'text'\n  return 'unknown'\n}\n\n/**\n * Get one of types `TYPES.FRAGMENT`, `TYPES.NODE`, `text/html`, `text/rtf` or\n * `text/plain` from transfers's `data` if possible, otherwise return null.\n *\n * @param {Object} transfer\n * @param {String} type\n * @return {String}\n */\n\nfunction getType(transfer, type) {\n  if (!transfer.types || !transfer.types.length) {\n    // COMPAT: In IE 11, there is no `types` field but `getData('Text')`\n    // is supported`. (2017/06/23)\n    return type == TEXT ? transfer.getData('Text') || null : null\n  }\n\n  // COMPAT: In Edge, transfer.types doesn't respond to `indexOf`. (2017/10/25)\n  const types = Array.from(transfer.types)\n\n  return types.indexOf(type) !== -1 ? transfer.getData(type) || null : null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default getEventTransfer\n","import TRANSFER_TYPES from '../constants/transfer-types'\n\n/**\n * The default plain text transfer type.\n *\n * @type {String}\n */\n\nconst { TEXT } = TRANSFER_TYPES\n\n/**\n * Set data with `type` and `content` on an `event`.\n *\n * COMPAT: In Edge, custom types throw errors, so embed all non-standard\n * types in text/plain compound object. (2017/7/12)\n *\n * @param {Event} event\n * @param {String} type\n * @param {String} content\n */\n\nfunction setEventTransfer(event, type, content) {\n  const mime = TRANSFER_TYPES[type.toUpperCase()]\n\n  if (!mime) {\n    throw new Error(`Cannot set unknown transfer type \"${mime}\".`)\n  }\n\n  if (event.nativeEvent) {\n    event = event.nativeEvent\n  }\n\n  const transfer = event.dataTransfer || event.clipboardData\n\n  try {\n    transfer.setData(mime, content)\n  } catch (err) {\n    const prefix = 'SLATE-DATA-EMBED::'\n    const text = transfer.getData(TEXT)\n    let obj = {}\n\n    // If the existing plain text data is prefixed, it's Slate JSON data.\n    if (text.substring(0, prefix.length) === prefix) {\n      try {\n        obj = JSON.parse(text.substring(prefix.length))\n      } catch (e) {\n        throw new Error(\n          'Failed to parse Slate data from `DataTransfer` object.'\n        )\n      }\n    } else {\n      // Otherwise, it's just set it as is.\n      obj[TEXT] = text\n    }\n\n    obj[mime] = content\n    const string = `${prefix}${JSON.stringify(obj)}`\n    transfer.setData(TEXT, string)\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default setEventTransfer\n","import Base64 from 'slate-base64-serializer'\nimport Debug from 'debug'\nimport Plain from 'slate-plain-serializer'\nimport { IS_IOS } from 'slate-dev-environment'\nimport React from 'react'\nimport getWindow from 'get-window'\nimport { Block, Inline, Text } from 'slate'\nimport Hotkeys from 'slate-hotkeys'\n\nimport EVENT_HANDLERS from '../constants/event-handlers'\nimport Content from '../components/content'\nimport cloneFragment from '../utils/clone-fragment'\nimport findDOMNode from '../utils/find-dom-node'\nimport findNode from '../utils/find-node'\nimport findPoint from '../utils/find-point'\nimport findRange from '../utils/find-range'\nimport getEventRange from '../utils/get-event-range'\nimport getEventTransfer from '../utils/get-event-transfer'\nimport setEventTransfer from '../utils/set-event-transfer'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:after')\n\n/**\n * The after plugin.\n *\n * @return {Object}\n */\n\nfunction AfterPlugin() {\n  let isDraggingInternally = null\n\n  /**\n   * On before input, correct any browser inconsistencies.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onBeforeInput(event, change, editor) {\n    debug('onBeforeInput', { event })\n\n    event.preventDefault()\n    change.insertText(event.data)\n  }\n\n  /**\n   * On blur.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onBlur(event, change, editor) {\n    debug('onBlur', { event })\n\n    change.blur()\n  }\n\n  /**\n   * On click.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onClick(event, change, editor) {\n    if (editor.props.readOnly) return true\n\n    const { value } = change\n    const { document } = value\n    const node = findNode(event.target, value)\n    const isVoid = node && (node.isVoid || document.hasVoidParent(node.key))\n\n    if (isVoid) {\n      // COMPAT: In Chrome & Safari, selections that are at the zero offset of\n      // an inline node will be automatically replaced to be at the last offset\n      // of a previous inline node, which screws us up, so we always want to set\n      // it to the end of the node. (2016/11/29)\n      change.focus().collapseToEndOf(node)\n    }\n\n    debug('onClick', { event })\n  }\n\n  /**\n   * On copy.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCopy(event, change, editor) {\n    debug('onCopy', { event })\n\n    cloneFragment(event, change.value)\n  }\n\n  /**\n   * On cut.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCut(event, change, editor) {\n    debug('onCut', { event })\n\n    cloneFragment(event, change.value)\n    const window = getWindow(event.target)\n\n    // Once the fake cut content has successfully been added to the clipboard,\n    // delete the content in the current selection.\n    window.requestAnimationFrame(() => {\n      // If user cuts a void block node or a void inline node,\n      // manually removes it since selection is collapsed in this case.\n      const { value } = change\n      const { endBlock, endInline, isCollapsed } = value\n      const isVoidBlock = endBlock && endBlock.isVoid && isCollapsed\n      const isVoidInline = endInline && endInline.isVoid && isCollapsed\n\n      if (isVoidBlock) {\n        editor.change(c => c.removeNodeByKey(endBlock.key))\n      } else if (isVoidInline) {\n        editor.change(c => c.removeNodeByKey(endInline.key))\n      } else {\n        editor.change(c => c.delete())\n      }\n    })\n  }\n\n  /**\n   * On drag end.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragEnd(event, change, editor) {\n    debug('onDragEnd', { event })\n\n    isDraggingInternally = null\n  }\n\n  /**\n   * On drag over.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragOver(event, change, editor) {\n    debug('onDragOver', { event })\n\n    isDraggingInternally = false\n  }\n\n  /**\n   * On drag start.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragStart(event, change, editor) {\n    debug('onDragStart', { event })\n\n    isDraggingInternally = true\n\n    const { value } = change\n    const { document } = value\n    const node = findNode(event.target, value)\n    const isVoid = node && (node.isVoid || document.hasVoidParent(node.key))\n\n    if (isVoid) {\n      const encoded = Base64.serializeNode(node, { preserveKeys: true })\n      setEventTransfer(event, 'node', encoded)\n    } else {\n      const { fragment } = value\n      const encoded = Base64.serializeNode(fragment)\n      setEventTransfer(event, 'fragment', encoded)\n    }\n  }\n\n  /**\n   * On drop.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDrop(event, change, editor) {\n    debug('onDrop', { event })\n\n    const { value } = change\n    const { document, selection } = value\n    const window = getWindow(event.target)\n    let target = getEventRange(event, value)\n    if (!target) return\n\n    const transfer = getEventTransfer(event)\n    const { type, fragment, node, text } = transfer\n\n    change.focus()\n\n    // If the drag is internal and the target is after the selection, it\n    // needs to account for the selection's content being deleted.\n    if (\n      isDraggingInternally &&\n      selection.endKey == target.endKey &&\n      selection.endOffset < target.endOffset\n    ) {\n      target = target.move(\n        selection.startKey == selection.endKey\n          ? 0 - selection.endOffset + selection.startOffset\n          : 0 - selection.endOffset\n      )\n    }\n\n    if (isDraggingInternally) {\n      change.delete()\n    }\n\n    change.select(target)\n\n    if (type == 'text' || type == 'html') {\n      const { anchorKey } = target\n      let hasVoidParent = document.hasVoidParent(anchorKey)\n\n      if (hasVoidParent) {\n        let n = document.getNode(anchorKey)\n\n        while (hasVoidParent) {\n          n = document.getNextText(n.key)\n          if (!n) break\n          hasVoidParent = document.hasVoidParent(n.key)\n        }\n\n        if (n) change.collapseToStartOf(n)\n      }\n\n      if (text) {\n        text.split('\\n').forEach((line, i) => {\n          if (i > 0) change.splitBlock()\n          change.insertText(line)\n        })\n      }\n    }\n\n    if (type == 'fragment') {\n      change.insertFragment(fragment)\n    }\n\n    if (type == 'node' && Block.isBlock(node)) {\n      change.insertBlock(node.regenerateKey()).removeNodeByKey(node.key)\n    }\n\n    if (type == 'node' && Inline.isInline(node)) {\n      change.insertInline(node.regenerateKey()).removeNodeByKey(node.key)\n    }\n\n    // COMPAT: React's onSelect event breaks after an onDrop event\n    // has fired in a node: https://github.com/facebook/react/issues/11379.\n    // Until this is fixed in React, we dispatch a mouseup event on that\n    // DOM node, since that will make it go back to normal.\n    const focusNode = document.getNode(target.focusKey)\n    const el = findDOMNode(focusNode, window)\n    if (!el) return\n\n    el.dispatchEvent(\n      new MouseEvent('mouseup', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n      })\n    )\n  }\n\n  /**\n   * On input.\n   *\n   * @param {Event} eventvent\n   * @param {Change} change\n   */\n\n  function onInput(event, change, editor) {\n    debug('onInput', { event })\n\n    const window = getWindow(event.target)\n    const { value } = change\n\n    // Get the selection point.\n    const native = window.getSelection()\n    const { anchorNode } = native\n    const point = findPoint(anchorNode, 0, value)\n    if (!point) return\n\n    // Get the text node and leaf in question.\n    const { document, selection } = value\n    const node = document.getDescendant(point.key)\n    const block = document.getClosestBlock(node.key)\n    const leaves = node.getLeaves()\n    const lastText = block.getLastText()\n    const lastLeaf = leaves.last()\n    let start = 0\n    let end = 0\n\n    const leaf =\n      leaves.find(r => {\n        start = end\n        end += r.text.length\n        if (end > point.offset) return true\n      }) || lastLeaf\n\n    // Get the text information.\n    const { text } = leaf\n    let { textContent } = anchorNode\n    const isLastText = node == lastText\n    const isLastLeaf = leaf == lastLeaf\n    const lastChar = textContent.charAt(textContent.length - 1)\n\n    // COMPAT: If this is the last leaf, and the DOM text ends in a new line,\n    // we will have added another new line in <Leaf>'s render method to account\n    // for browsers collapsing a single trailing new lines, so remove it.\n    if (isLastText && isLastLeaf && lastChar == '\\n') {\n      textContent = textContent.slice(0, -1)\n    }\n\n    // If the text is no different, abort.\n    if (textContent == text) return\n\n    // Determine what the selection should be after changing the text.\n    const delta = textContent.length - text.length\n    const corrected = selection.collapseToEnd().move(delta)\n    const entire = selection\n      .moveAnchorTo(point.key, start)\n      .moveFocusTo(point.key, end)\n\n    // Change the current value to have the leaf's text replaced.\n    change.insertTextAtRange(entire, textContent, leaf.marks).select(corrected)\n  }\n\n  /**\n   * On key down.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onKeyDown(event, change, editor) {\n    debug('onKeyDown', { event })\n\n    const { value } = change\n\n    // COMPAT: In iOS, some of these hotkeys are handled in the\n    // `onNativeBeforeInput` handler of the `<Content>` component in order to\n    // preserve native autocorrect behavior, so they shouldn't be handled here.\n    if (Hotkeys.isSplitBlock(event) && !IS_IOS) {\n      return value.isInVoid\n        ? change.collapseToStartOfNextText()\n        : change.splitBlock()\n    }\n\n    if (Hotkeys.isDeleteCharBackward(event) && !IS_IOS) {\n      return change.deleteCharBackward()\n    }\n\n    if (Hotkeys.isDeleteCharForward(event) && !IS_IOS) {\n      return change.deleteCharForward()\n    }\n\n    if (Hotkeys.isDeleteLineBackward(event)) {\n      return change.deleteLineBackward()\n    }\n\n    if (Hotkeys.isDeleteLineForward(event)) {\n      return change.deleteLineForward()\n    }\n\n    if (Hotkeys.isDeleteWordBackward(event)) {\n      return change.deleteWordBackward()\n    }\n\n    if (Hotkeys.isDeleteWordForward(event)) {\n      return change.deleteWordForward()\n    }\n\n    if (Hotkeys.isRedo(event)) {\n      return change.redo()\n    }\n\n    if (Hotkeys.isUndo(event)) {\n      return change.undo()\n    }\n\n    // COMPAT: Certain browsers don't handle the selection updates properly. In\n    // Chrome, the selection isn't properly extended. And in Firefox, the\n    // selection isn't properly collapsed. (2017/10/17)\n    if (Hotkeys.isCollapseLineBackward(event)) {\n      event.preventDefault()\n      return change.collapseLineBackward()\n    }\n\n    if (Hotkeys.isCollapseLineForward(event)) {\n      event.preventDefault()\n      return change.collapseLineForward()\n    }\n\n    if (Hotkeys.isExtendLineBackward(event)) {\n      event.preventDefault()\n      return change.extendLineBackward()\n    }\n\n    if (Hotkeys.isExtendLineForward(event)) {\n      event.preventDefault()\n      return change.extendLineForward()\n    }\n\n    // COMPAT: If a void node is selected, or a zero-width text node adjacent to\n    // an inline is selected, we need to handle these hotkeys manually because\n    // browsers won't know what to do.\n    if (Hotkeys.isCollapseCharBackward(event)) {\n      const { document, isInVoid, previousText, startText } = value\n      const isPreviousInVoid =\n        previousText && document.hasVoidParent(previousText.key)\n      if (isInVoid || isPreviousInVoid || startText.text == '') {\n        event.preventDefault()\n        return change.collapseCharBackward()\n      }\n    }\n\n    if (Hotkeys.isCollapseCharForward(event)) {\n      const { document, isInVoid, nextText, startText } = value\n      const isNextInVoid = nextText && document.hasVoidParent(nextText.key)\n      if (isInVoid || isNextInVoid || startText.text == '') {\n        event.preventDefault()\n        return change.collapseCharForward()\n      }\n    }\n\n    if (Hotkeys.isExtendCharBackward(event)) {\n      const { document, isInVoid, previousText, startText } = value\n      const isPreviousInVoid =\n        previousText && document.hasVoidParent(previousText.key)\n      if (isInVoid || isPreviousInVoid || startText.text == '') {\n        event.preventDefault()\n        return change.extendCharBackward()\n      }\n    }\n\n    if (Hotkeys.isExtendCharForward(event)) {\n      const { document, isInVoid, nextText, startText } = value\n      const isNextInVoid = nextText && document.hasVoidParent(nextText.key)\n      if (isInVoid || isNextInVoid || startText.text == '') {\n        event.preventDefault()\n        return change.extendCharForward()\n      }\n    }\n  }\n\n  /**\n   * On paste.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onPaste(event, change, editor) {\n    debug('onPaste', { event })\n\n    const transfer = getEventTransfer(event)\n    const { type, fragment, text } = transfer\n\n    if (type == 'fragment') {\n      change.insertFragment(fragment)\n    }\n\n    if (type == 'text' || type == 'html') {\n      if (!text) return\n      const { value } = change\n      const { document, selection, startBlock } = value\n      if (startBlock.isVoid) return\n\n      const defaultBlock = startBlock\n      const defaultMarks = document.getInsertMarksAtRange(selection)\n      const frag = Plain.deserialize(text, { defaultBlock, defaultMarks })\n        .document\n      change.insertFragment(frag)\n    }\n  }\n\n  /**\n   * On select.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onSelect(event, change, editor) {\n    debug('onSelect', { event })\n\n    const window = getWindow(event.target)\n    const { value } = change\n    const { document } = value\n    const native = window.getSelection()\n\n    // If there are no ranges, the editor was blurred natively.\n    if (!native.rangeCount) {\n      change.blur()\n      return\n    }\n\n    // Otherwise, determine the Slate selection from the native one.\n    let range = findRange(native, value)\n    if (!range) return\n\n    const { anchorKey, anchorOffset, focusKey, focusOffset } = range\n    const anchorText = document.getNode(anchorKey)\n    const focusText = document.getNode(focusKey)\n    const anchorInline = document.getClosestInline(anchorKey)\n    const focusInline = document.getClosestInline(focusKey)\n    const focusBlock = document.getClosestBlock(focusKey)\n    const anchorBlock = document.getClosestBlock(anchorKey)\n\n    // COMPAT: If the anchor point is at the start of a non-void, and the\n    // focus point is inside a void node with an offset that isn't `0`, set\n    // the focus offset to `0`. This is due to void nodes <span>'s being\n    // positioned off screen, resulting in the offset always being greater\n    // than `0`. Since we can't know what it really should be, and since an\n    // offset of `0` is less destructive because it creates a hanging\n    // selection, go with `0`. (2017/09/07)\n    if (\n      anchorBlock &&\n      !anchorBlock.isVoid &&\n      anchorOffset == 0 &&\n      focusBlock &&\n      focusBlock.isVoid &&\n      focusOffset != 0\n    ) {\n      range = range.set('focusOffset', 0)\n    }\n\n    // COMPAT: If the selection is at the end of a non-void inline node, and\n    // there is a node after it, put it in the node after instead. This\n    // standardizes the behavior, since it's indistinguishable to the user.\n    if (\n      anchorInline &&\n      !anchorInline.isVoid &&\n      anchorOffset == anchorText.text.length\n    ) {\n      const block = document.getClosestBlock(anchorKey)\n      const next = block.getNextText(anchorKey)\n      if (next) range = range.moveAnchorTo(next.key, 0)\n    }\n\n    if (\n      focusInline &&\n      !focusInline.isVoid &&\n      focusOffset == focusText.text.length\n    ) {\n      const block = document.getClosestBlock(focusKey)\n      const next = block.getNextText(focusKey)\n      if (next) range = range.moveFocusTo(next.key, 0)\n    }\n\n    range = range.normalize(document)\n    change.select(range)\n  }\n\n  /**\n   * Render editor.\n   *\n   * @param {Object} props\n   * @param {Editor} editor\n   * @return {Object}\n   */\n\n  function renderEditor(props, editor) {\n    const handlers = EVENT_HANDLERS.reduce((obj, handler) => {\n      obj[handler] = editor[handler]\n      return obj\n    }, {})\n\n    return (\n      <Content\n        {...handlers}\n        autoCorrect={props.autoCorrect}\n        className={props.className}\n        children={props.children}\n        editor={editor}\n        readOnly={props.readOnly}\n        role={props.role}\n        spellCheck={props.spellCheck}\n        style={props.style}\n        tabIndex={props.tabIndex}\n        tagName={props.tagName}\n      />\n    )\n  }\n\n  /**\n   * Render node.\n   *\n   * @param {Object} props\n   * @return {Element}\n   */\n\n  function renderNode(props) {\n    const { attributes, children, node } = props\n    if (node.object != 'block' && node.object != 'inline') return\n    const Tag = node.object == 'block' ? 'div' : 'span'\n    const style = { position: 'relative' }\n    return (\n      <Tag {...attributes} style={style}>\n        {children}\n      </Tag>\n    )\n  }\n\n  /**\n   * Render placeholder.\n   *\n   * @param {Object} props\n   * @return {Element}\n   */\n\n  function renderPlaceholder(props) {\n    const { editor, node } = props\n    if (!editor.props.placeholder) return\n    if (editor.state.isComposing) return\n    if (node.object != 'block') return\n    if (!Text.isTextList(node.nodes)) return\n    if (node.text != '') return\n    if (editor.value.document.getBlocks().size > 1) return\n\n    const style = {\n      pointerEvents: 'none',\n      display: 'inline-block',\n      width: '0',\n      maxWidth: '100%',\n      whiteSpace: 'nowrap',\n      opacity: '0.333',\n    }\n\n    return (\n      <span contentEditable={false} style={style}>\n        {editor.props.placeholder}\n      </span>\n    )\n  }\n\n  /**\n   * Return the plugin.\n   *\n   * @type {Object}\n   */\n\n  return {\n    onBeforeInput,\n    onBlur,\n    onClick,\n    onCopy,\n    onCut,\n    onDragEnd,\n    onDragOver,\n    onDragStart,\n    onDrop,\n    onInput,\n    onKeyDown,\n    onPaste,\n    onSelect,\n    renderEditor,\n    renderNode,\n    renderPlaceholder,\n  }\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport default AfterPlugin\n","import Debug from 'debug'\nimport getWindow from 'get-window'\nimport { findDOMNode } from 'react-dom'\nimport Hotkeys from 'slate-hotkeys'\nimport {\n  IS_FIREFOX,\n  IS_IOS,\n  IS_ANDROID,\n  SUPPORTED_EVENTS,\n} from 'slate-dev-environment'\n\nimport findNode from '../utils/find-node'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:before')\n\n/**\n * The core before plugin.\n *\n * @return {Object}\n */\n\nfunction BeforePlugin() {\n  let activeElement = null\n  let compositionCount = 0\n  let isComposing = false\n  let isCopying = false\n  let isDragging = false\n\n  /**\n   * On before input.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onBeforeInput(event, change, editor) {\n    if (editor.props.readOnly) return true\n\n    // COMPAT: React's `onBeforeInput` synthetic event is based on the native\n    // `keypress` and `textInput` events. In browsers that support the native\n    // `beforeinput` event, we instead use that event to trigger text insertion,\n    // since it provides more useful information about the range being affected\n    // and also preserves compatibility with iOS autocorrect, which would be\n    // broken if we called `preventDefault()` on React's synthetic event here.\n    // Since native `onbeforeinput` mainly benefits autocorrect and spellcheck\n    // for mobile, on desktop it brings IME issue, limit its scope for now.\n    if ((IS_IOS || IS_ANDROID) && SUPPORTED_EVENTS.beforeinput) return true\n\n    debug('onBeforeInput', { event })\n  }\n\n  /**\n   * On blur.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onBlur(event, change, editor) {\n    if (isCopying) return true\n    if (editor.props.readOnly) return true\n\n    const { value } = change\n    const { relatedTarget, target } = event\n    const window = getWindow(target)\n\n    // COMPAT: If the current `activeElement` is still the previous one, this is\n    // due to the window being blurred when the tab itself becomes unfocused, so\n    // we want to abort early to allow to editor to stay focused when the tab\n    // becomes focused again.\n    if (activeElement == window.document.activeElement) return true\n\n    // COMPAT: The `relatedTarget` can be null when the new focus target is not\n    // a \"focusable\" element (eg. a `<div>` without `tabindex` set).\n    if (relatedTarget) {\n      const el = findDOMNode(editor)\n\n      // COMPAT: The event should be ignored if the focus is returning to the\n      // editor from an embedded editable element (eg. an <input> element inside\n      // a void node).\n      if (relatedTarget == el) return true\n\n      // COMPAT: The event should be ignored if the focus is moving from the\n      // editor to inside a void node's spacer element.\n      if (relatedTarget.hasAttribute('data-slate-spacer')) return true\n\n      // COMPAT: The event should be ignored if the focus is moving to a non-\n      // editable section of an element that isn't a void node (eg. a list item\n      // of the check list example).\n      const node = findNode(relatedTarget, value)\n      if (el.contains(relatedTarget) && node && !node.isVoid) return true\n    }\n\n    debug('onBlur', { event })\n  }\n\n  /**\n   * On change.\n   *\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onChange(change, editor) {\n    const { value } = change\n\n    // If the value's schema isn't the editor's schema, update it. This can\n    // happen on the initialization of the editor, or if the schema changes.\n    // This change isn't save into history since only schema is updated.\n    if (value.schema != editor.schema) {\n      change.setValue({ schema: editor.schema }, { save: false }).normalize()\n    }\n\n    debug('onChange')\n  }\n\n  /**\n   * On composition end.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCompositionEnd(event, change, editor) {\n    const n = compositionCount\n\n    // The `count` check here ensures that if another composition starts\n    // before the timeout has closed out this one, we will abort unsetting the\n    // `isComposing` flag, since a composition is still in affect.\n    window.requestAnimationFrame(() => {\n      if (compositionCount > n) return\n      isComposing = false\n\n      // HACK: we need to re-render the editor here so that it will update its\n      // placeholder in case one is currently rendered. This should be handled\n      // differently ideally, in a less invasive way?\n      // (apply force re-render if isComposing changes)\n      if (editor.state.isComposing) {\n        editor.setState({ isComposing: false })\n      }\n    })\n\n    debug('onCompositionEnd', { event })\n  }\n\n  /**\n   * On composition start.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCompositionStart(event, change, editor) {\n    isComposing = true\n    compositionCount++\n\n    // HACK: we need to re-render the editor here so that it will update its\n    // placeholder in case one is currently rendered. This should be handled\n    // differently ideally, in a less invasive way?\n    // (apply force re-render if isComposing changes)\n    if (!editor.state.isComposing) {\n      editor.setState({ isComposing: true })\n    }\n\n    debug('onCompositionStart', { event })\n  }\n\n  /**\n   * On copy.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCopy(event, change, editor) {\n    const window = getWindow(event.target)\n    isCopying = true\n    window.requestAnimationFrame(() => (isCopying = false))\n\n    debug('onCopy', { event })\n  }\n\n  /**\n   * On cut.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCut(event, change, editor) {\n    if (editor.props.readOnly) return true\n\n    const window = getWindow(event.target)\n    isCopying = true\n    window.requestAnimationFrame(() => (isCopying = false))\n\n    debug('onCut', { event })\n  }\n\n  /**\n   * On drag end.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragEnd(event, change, editor) {\n    isDragging = false\n\n    debug('onDragEnd', { event })\n  }\n\n  /**\n   * On drag enter.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragEnter(event, change, editor) {\n    debug('onDragEnter', { event })\n  }\n\n  /**\n   * On drag exit.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragExit(event, change, editor) {\n    debug('onDragExit', { event })\n  }\n\n  /**\n   * On drag leave.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragLeave(event, change, editor) {\n    debug('onDragLeave', { event })\n  }\n\n  /**\n   * On drag over.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragOver(event, change, editor) {\n    // If the target is inside a void node, and only in this case,\n    // call `preventDefault` to signal that drops are allowed.\n    // When the target is editable, dropping is already allowed by\n    // default, and calling `preventDefault` hides the cursor.\n    const node = findNode(event.target, editor.value)\n    if (node.isVoid) event.preventDefault()\n\n    // If a drag is already in progress, don't do this again.\n    if (!isDragging) {\n      isDragging = true\n      event.nativeEvent.dataTransfer.dropEffect = 'move'\n    }\n\n    debug('onDragOver', { event })\n  }\n\n  /**\n   * On drag start.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragStart(event, change, editor) {\n    isDragging = true\n\n    debug('onDragStart', { event })\n  }\n\n  /**\n   * On drop.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDrop(event, change, editor) {\n    // Nothing happens in read-only mode.\n    if (editor.props.readOnly) return true\n\n    // Prevent default so the DOM's value isn't corrupted.\n    event.preventDefault()\n\n    debug('onDrop', { event })\n  }\n\n  /**\n   * On focus.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onFocus(event, change, editor) {\n    if (isCopying) return true\n    if (editor.props.readOnly) return true\n\n    const el = findDOMNode(editor)\n\n    // Save the new `activeElement`.\n    const window = getWindow(event.target)\n    activeElement = window.document.activeElement\n\n    // COMPAT: If the editor has nested editable elements, the focus can go to\n    // those elements. In Firefox, this must be prevented because it results in\n    // issues with keyboard navigation. (2017/03/30)\n    if (IS_FIREFOX && event.target != el) {\n      el.focus()\n      return true\n    }\n\n    debug('onFocus', { event })\n  }\n\n  /**\n   * On input.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onInput(event, change, editor) {\n    if (isComposing) return true\n    if (change.value.isBlurred) return true\n\n    debug('onInput', { event })\n  }\n\n  /**\n   * On key down.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onKeyDown(event, change, editor) {\n    if (editor.props.readOnly) return true\n\n    // When composing, we need to prevent all hotkeys from executing while\n    // typing. However, certain characters also move the selection before\n    // we're able to handle it, so prevent their default behavior.\n    if (isComposing) {\n      if (Hotkeys.isComposing(event)) event.preventDefault()\n      return true\n    }\n\n    // Certain hotkeys have native behavior in contenteditable elements which\n    // will cause our value to be out of sync, so prevent them.\n    if (Hotkeys.isContentEditable(event) && !IS_IOS) {\n      event.preventDefault()\n    }\n\n    debug('onKeyDown', { event })\n  }\n\n  /**\n   * On paste.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onPaste(event, change, editor) {\n    if (editor.props.readOnly) return true\n\n    // Prevent defaults so the DOM state isn't corrupted.\n    event.preventDefault()\n\n    debug('onPaste', { event })\n  }\n\n  /**\n   * On select.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onSelect(event, change, editor) {\n    if (isCopying) return true\n    if (isComposing) return true\n    if (editor.props.readOnly) return true\n\n    // Save the new `activeElement`.\n    const window = getWindow(event.target)\n    activeElement = window.document.activeElement\n\n    debug('onSelect', { event })\n  }\n\n  /**\n   * Return the plugin.\n   *\n   * @type {Object}\n   */\n\n  return {\n    onBeforeInput,\n    onBlur,\n    onChange,\n    onCompositionEnd,\n    onCompositionStart,\n    onCopy,\n    onCut,\n    onDragEnd,\n    onDragEnter,\n    onDragExit,\n    onDragLeave,\n    onDragOver,\n    onDragStart,\n    onDrop,\n    onFocus,\n    onInput,\n    onKeyDown,\n    onPaste,\n    onSelect,\n  }\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport default BeforePlugin\n","/**\n * Noop.\n *\n * @return {Void}\n */\n\nfunction noop() {}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default noop\n","import Debug from 'debug'\nimport Portal from 'react-portal'\nimport React from 'react'\nimport SlateTypes from 'slate-prop-types'\nimport Types from 'prop-types'\nimport logger from 'slate-dev-logger'\nimport { Schema, Stack } from 'slate'\n\nimport EVENT_HANDLERS from '../constants/event-handlers'\nimport PLUGINS_PROPS from '../constants/plugin-props'\nimport AfterPlugin from '../plugins/after'\nimport BeforePlugin from '../plugins/before'\nimport noop from '../utils/noop'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:editor')\n\n/**\n * Editor.\n *\n * @type {Component}\n */\n\nclass Editor extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    autoCorrect: Types.bool,\n    autoFocus: Types.bool,\n    className: Types.string,\n    onChange: Types.func,\n    placeholder: Types.any,\n    plugins: Types.array,\n    readOnly: Types.bool,\n    role: Types.string,\n    schema: Types.object,\n    spellCheck: Types.bool,\n    style: Types.object,\n    tabIndex: Types.number,\n    value: SlateTypes.value.isRequired,\n  }\n\n  /**\n   * Default properties.\n   *\n   * @type {Object}\n   */\n\n  static defaultProps = {\n    autoFocus: false,\n    autoCorrect: true,\n    onChange: noop,\n    plugins: [],\n    readOnly: false,\n    schema: {},\n    spellCheck: true,\n  }\n\n  /**\n   * Constructor.\n   *\n   * @param {Object} props\n   */\n\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.tmp = {}\n    this.tmp.updates = 0\n    this.tmp.resolves = 0\n\n    // Resolve the plugins and create a stack and schema from them.\n    const plugins = this.resolvePlugins(props.plugins, props.schema)\n    const stack = Stack.create({ plugins })\n    const schema = Schema.create({ plugins })\n    this.state.schema = schema\n    this.state.stack = stack\n\n    // Run `onChange` on the passed-in value because we need to ensure that it\n    // is normalized, and queue the resulting change.\n    const change = props.value.change()\n    stack.run('onChange', change, this)\n    this.queueChange(change)\n    this.state.value = change.value\n\n    // Create a bound event handler for each event.\n    EVENT_HANDLERS.forEach(handler => {\n      this[handler] = (...args) => {\n        this.onEvent(handler, ...args)\n      }\n    })\n  }\n\n  /**\n   * When the `props` are updated, create a new `Stack` if necessary and run\n   * `onChange` to ensure the value is normalized.\n   *\n   * @param {Object} props\n   */\n\n  componentWillReceiveProps = props => {\n    let { schema, stack } = this\n\n    // Increment the updates counter as a baseline.\n    this.tmp.updates++\n\n    // If the plugins or the schema have changed, we need to re-resolve the\n    // plugins, since it will result in a new stack and new validations.\n    if (\n      props.plugins != this.props.plugins ||\n      props.schema != this.props.schema\n    ) {\n      const plugins = this.resolvePlugins(props.plugins, props.schema)\n      stack = Stack.create({ plugins })\n      schema = Schema.create({ plugins })\n      this.setState({ schema, stack })\n\n      // Increment the resolves counter.\n      this.tmp.resolves++\n\n      // If we've resolved a few times already, and it's exactly in line with\n      // the updates, then warn the user that they may be doing something wrong.\n      if (this.tmp.resolves > 5 && this.tmp.resolves == this.tmp.updates) {\n        logger.warn(\n          'A Slate <Editor> is re-resolving `props.plugins` or `props.schema` on each update, which leads to poor performance. This is often due to passing in a new `schema` or `plugins` prop with each render by declaring them inline in your render function. Do not do this!'\n        )\n      }\n    }\n\n    // Run `onChange` on the passed-in value because we need to ensure that it\n    // is normalized, and queue the resulting change.\n    const change = props.value.change()\n    stack.run('onChange', change, this)\n    this.queueChange(change)\n    this.setState({ value: change.value })\n  }\n\n  /**\n   * When the component first mounts, flush any temporary changes,\n   * and then, focus the editor if `autoFocus` is set.\n   */\n\n  componentDidMount = () => {\n    this.flushChange()\n\n    if (this.props.autoFocus) {\n      this.focus()\n    }\n  }\n\n  /**\n   * When the component updates, flush any temporary change.\n   */\n\n  componentDidUpdate = () => {\n    this.flushChange()\n  }\n\n  /**\n   * Queue a `change` object, to be able to flush it later. This is required for\n   * when a change needs to be applied to the value, but because of the React\n   * lifecycle we can't apply that change immediately. So we cache it here and\n   * later can call `this.flushChange()` to flush it.\n   *\n   * @param {Change} change\n   */\n\n  queueChange = change => {\n    if (change.operations.size) {\n      debug('queueChange', { change })\n      this.tmp.change = change\n    }\n  }\n\n  /**\n   * Flush a temporarily stored `change` object, for when a change needed to be\n   * made but couldn't because of React's lifecycle.\n   */\n\n  flushChange = () => {\n    const { change } = this.tmp\n\n    if (change) {\n      debug('flushChange', { change })\n      delete this.tmp.change\n      this.props.onChange(change)\n    }\n  }\n\n  /**\n   * Perform a change on the editor, passing `...args` to `change.call`.\n   *\n   * @param {Mixed} ...args\n   */\n\n  change = (...args) => {\n    const change = this.value.change().call(...args)\n    this.onChange(change)\n  }\n\n  /**\n   * Programmatically blur the editor.\n   */\n\n  blur = () => {\n    this.change(c => c.blur())\n  }\n\n  /**\n   * Programmatically focus the editor.\n   */\n\n  focus = () => {\n    this.change(c => c.focus())\n  }\n\n  /**\n   * Getters for exposing public properties of the editor's state.\n   */\n\n  get schema() {\n    return this.state.schema\n  }\n\n  get stack() {\n    return this.state.stack\n  }\n\n  get value() {\n    return this.state.value\n  }\n\n  /**\n   * On event.\n   *\n   * @param {String} handler\n   * @param {Event} event\n   */\n\n  onEvent = (handler, event) => {\n    this.change(change => {\n      this.stack.run(handler, event, change, this)\n    })\n  }\n\n  /**\n   * On change.\n   *\n   * @param {Change} change\n   */\n\n  onChange = change => {\n    debug('onChange', { change })\n\n    this.stack.run('onChange', change, this)\n    const { value } = change\n    const { onChange } = this.props\n    if (value == this.value) return\n    onChange(change)\n  }\n\n  /**\n   * Render the editor.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    debug('render', this)\n\n    const children = this.stack\n      .map('renderPortal', this.value, this)\n      .map((child, i) => (\n        <Portal key={i} isOpened>\n          {child}\n        </Portal>\n      ))\n\n    const props = { ...this.props, children }\n    const tree = this.stack.render('renderEditor', props, this)\n    return tree\n  }\n\n  /**\n   * Resolve an array of plugins from `plugins` and `schema` props.\n   *\n   * In addition to the plugins provided in props, this will initialize three\n   * other plugins:\n   *\n   * - The top-level editor plugin, which allows for top-level handlers, etc.\n   * - The two \"core\" plugins, one before all the other and one after.\n   *\n   * @param {Array|Void} plugins\n   * @param {Schema|Object|Void} schema\n   * @return {Array}\n   */\n\n  resolvePlugins = (plugins, schema) => {\n    const beforePlugin = BeforePlugin()\n    const afterPlugin = AfterPlugin()\n    const editorPlugin = {\n      schema: schema || {},\n    }\n\n    for (const prop of PLUGINS_PROPS) {\n      // Skip `onChange` because the editor's `onChange` is special.\n      if (prop == 'onChange') continue\n\n      // Skip `schema` because it can't be proxied easily, so it must be\n      // passed in as an argument to this function instead.\n      if (prop == 'schema') continue\n\n      // Define a function that will just proxies into `props`.\n      editorPlugin[prop] = (...args) => {\n        return this.props[prop] && this.props[prop](...args)\n      }\n    }\n\n    return [beforePlugin, editorPlugin, ...(plugins || []), afterPlugin]\n  }\n}\n\n/**\n * Mix in the property types for the event handlers.\n */\n\nfor (const prop of EVENT_HANDLERS) {\n  Editor.propTypes[prop] = Types.func\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Editor\n","import Editor from './components/editor'\nimport cloneFragment from './utils/clone-fragment'\nimport findDOMNode from './utils/find-dom-node'\nimport findDOMRange from './utils/find-dom-range'\nimport findNode from './utils/find-node'\nimport findRange from './utils/find-range'\nimport getEventRange from './utils/get-event-range'\nimport getEventTransfer from './utils/get-event-transfer'\nimport setEventTransfer from './utils/set-event-transfer'\nimport AfterPlugin from './plugins/after'\nimport BeforePlugin from './plugins/before'\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport {\n  Editor,\n  cloneFragment,\n  findDOMNode,\n  findDOMRange,\n  findNode,\n  findRange,\n  getEventRange,\n  getEventTransfer,\n  setEventTransfer,\n  AfterPlugin,\n  BeforePlugin,\n}\n\nexport default {\n  Editor,\n  cloneFragment,\n  findDOMNode,\n  findDOMRange,\n  findNode,\n  findRange,\n  getEventRange,\n  getEventTransfer,\n  setEventTransfer,\n  AfterPlugin,\n  BeforePlugin,\n}\n"],"names":["EVENT_HANDLERS","PLUGIN_PROPS","PARSER","parse","string","matches","exec","Error","original","key","index","parseInt","stringify","object","debug","Debug","Leaf","props","marks","text","parent","node","offsetKey","OffsetKey","renderMarks","offset","editor","stack","leaf","renderText","attributes","reduce","children","mark","element","find","block","leaves","isVoid","nodes","size","lastText","getLastText","lastChar","charAt","length","isLastText","isLastLeaf","React","Component","propTypes","SlateTypes","isRequired","Types","number","message","args","Text","decorations","style","value","document","decs","filter","startKey","d","endKey","startsBefore","areDescendantsSorted","endsAfter","getLeaves","map","i","child","renderLeaf","ImmutableTypes","list","defaultProps","shouldComponentUpdate","n","nextProps","p","pLast","last","nLast","equals","Void","readOnly","Tag","spacer","content","any","bool","type","id","isSelected","getFirstText","getChildrenDecorations","activeDecorations","Set","asMutable","childrenDecorations","forEach","item","isRangeStart","add","decoration","isRangeEnd","remove","push","toList","orderChildDecorations","isEmpty","toArray","keyOrders","globalOrder","forEachDescendant","childNodes","endPoints","startKeyOrder","containingChildOrder","undefined","getContainingChildOrder","endKeyOrder","sort","a","b","order","nextChildIndex","findIndex","containingChild","Node","selection","indexes","getSelectionIndexes","concat","getDecorations","isChildSelected","start","end","renderNode","first","direction","getTextDirection","dir","placeholder","cloneElement","shouldUpdate","warn","findDOMNode","win","window","isNode","el","querySelector","findDOMPoint","iterator","createNodeIterator","NodeFilter","SHOW_TEXT","FILTER_ACCEPT","nextNode","textContent","o","findDOMRange","range","anchorKey","anchorOffset","focusKey","focusOffset","isBackward","isCollapsed","anchor","focus","r","createRange","setStart","setEnd","ZERO_WIDTH_ATTRIBUTE","ZERO_WIDTH_SELECTOR","OFFSET_KEY_ATTRIBUTE","RANGE_SELECTOR","TEXT_SELECTOR","VOID_SELECTOR","findPoint","nativeNode","nativeOffset","normalizeNodeAndOffset","nearestNode","nearestOffset","getWindow","parentNode","rangeNode","closest","textNode","toString","voidNode","hasAttribute","getAttribute","hasDescendant","nodeType","isLast","getEditableChild","triedForward","triedBackward","findRange","native","anchorNode","startContainer","Range","StaticRange","startOffset","endContainer","endOffset","focusNode","IS_IE","IS_EDGE","domAnchor","domFocus","create","OVERFLOWS","IS_IOS_11","IS_IOS","navigator","userAgent","match","findScrollContainer","scroller","getComputedStyle","overflowY","includes","body","scrollToSelection","isWindow","documentElement","backward","getRangeAt","cloneRange","collapse","cursorRect","getBoundingClientRect","IS_SAFARI","collapsed","top","height","getClientRects","width","yOffset","xOffset","scrollerTop","scrollerLeft","scrollerBordersY","scrollerBordersX","scrollerPaddingTop","scrollerPaddingBottom","scrollerPaddingLeft","scrollerPaddingRight","innerWidth","innerHeight","pageYOffset","pageXOffset","offsetWidth","offsetHeight","scrollTop","scrollLeft","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","scrollerRect","left","cursorTop","cursorLeft","x","y","scrollTo","Content","componentDidMount","addEventListener","onNativeSelectionChange","IS_ANDROID","SUPPORTED_EVENTS","beforeinput","onNativeBeforeInput","updateSelection","componentDidUpdate","getSelection","rangeCount","isBlurred","isInEditor","removeAllRanges","blur","isUnset","current","error","tmp","isUpdatingSelection","setBaseAndExtent","addRange","IS_FIREFOX","ref","target","isContentEditable","event","getTargetRanges","targetRange","inputType","preventDefault","change","deleteAtRange","isInVoid","collapseToStartOfNextText","splitBlockAtRange","data","dataTransfer","getData","insertTextAtRange","select","throttle","activeElement","onSelect","handler","onEvent","removeEventListener","targetEditorNode","className","tabIndex","role","tagName","spellCheck","Container","isFocused","handlers","obj","WebkitUserModify","onBlur","onFocus","onCompositionEnd","onCompositionStart","onCopy","onCut","onDragEnd","onDragOver","onDragStart","onDrop","onInput","onKeyDown","onKeyUp","onPaste","autoCorrect","func","cloneFragment","fragment","startText","startVoid","getClosestVoid","endVoid","encoded","Base64","serializeNode","contents","cloneContents","attach","innerText","trim","setEndAfter","firstChild","IS_CHROME","IS_OPERA","hasMarks","characters","slice","char","setStartBefore","call","querySelectorAll","isNewline","zw","els","removeAttribute","span","createElement","whiteSpace","appendChild","setAttribute","div","position","border","padding","margin","selectNodeContents","requestAnimationFrame","removeChild","findNode","getNode","getEventRange","nativeEvent","rect","isPrevious","moveToEndOf","getPreviousText","moveToStartOf","getNextText","caretRangeFromPoint","caretPositionFromPoint","offsetNode","TRANSFER_TYPES","FRAGMENT","HTML","NODE","RICH","TEXT","FRAGMENT_MATCHER","getEventTransfer","transfer","clipboardData","getType","html","rich","files","indexOf","full","embeddedTypes","getEmbeddedTypes","deserializeNode","items","Array","from","kind","getAsFile","exists","err","getTransferType","prefix","substring","JSON","types","setEventTransfer","mime","toUpperCase","setData","e","AfterPlugin","isDraggingInternally","onBeforeInput","insertText","onClick","hasVoidParent","collapseToEndOf","endBlock","endInline","isVoidBlock","isVoidInline","c","removeNodeByKey","delete","preserveKeys","move","collapseToStartOf","split","line","splitBlock","insertFragment","Block","isBlock","insertBlock","regenerateKey","Inline","isInline","insertInline","dispatchEvent","MouseEvent","point","getDescendant","getClosestBlock","lastLeaf","delta","corrected","collapseToEnd","entire","moveAnchorTo","moveFocusTo","Hotkeys","isSplitBlock","isDeleteCharBackward","deleteCharBackward","isDeleteCharForward","deleteCharForward","isDeleteLineBackward","deleteLineBackward","isDeleteLineForward","deleteLineForward","isDeleteWordBackward","deleteWordBackward","isDeleteWordForward","deleteWordForward","isRedo","redo","isUndo","undo","isCollapseLineBackward","collapseLineBackward","isCollapseLineForward","collapseLineForward","isExtendLineBackward","extendLineBackward","isExtendLineForward","extendLineForward","isCollapseCharBackward","previousText","isPreviousInVoid","collapseCharBackward","isCollapseCharForward","nextText","isNextInVoid","collapseCharForward","isExtendCharBackward","extendCharBackward","isExtendCharForward","extendCharForward","startBlock","defaultBlock","defaultMarks","getInsertMarksAtRange","frag","Plain","deserialize","anchorText","focusText","anchorInline","getClosestInline","focusInline","focusBlock","anchorBlock","set","next","normalize","renderEditor","renderPlaceholder","state","isComposing","isTextList","getBlocks","BeforePlugin","compositionCount","isCopying","isDragging","relatedTarget","contains","onChange","schema","setValue","save","setState","onDragEnter","onDragExit","onDragLeave","dropEffect","noop","Editor","updates","resolves","plugins","resolvePlugins","Stack","Schema","run","queueChange","tree","render","array","componentWillReceiveProps","flushChange","autoFocus","operations","beforePlugin","afterPlugin","editorPlugin","prop","PLUGINS_PROPS"],"mappings":"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"}